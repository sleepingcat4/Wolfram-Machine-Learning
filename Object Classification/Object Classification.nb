(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 13.2' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    222915,       4127]
NotebookOptionsPosition[    220560,       4081]
NotebookOutlinePosition[    220982,       4097]
CellTagsIndexPosition[    220939,       4094]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[BoxData[{
 RowBox[{
  RowBox[{"obj", "=", 
   RowBox[{"ResourceObject", "[", "\"\<CIFAR-10\>\"", "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"trainingData", "=", 
   RowBox[{"ResourceData", "[", 
    RowBox[{"obj", ",", "\"\<TrainingData\>\""}], "]"}]}], ";"}], "\n", 
 RowBox[{"RandomSample", "[", 
  RowBox[{"trainingData", ",", "5"}], "]"}]}], "Input",
 CellChangeTimes->{{3.893589364756487*^9, 3.8935893647573967`*^9}, {
  3.893591423320887*^9, 3.8935914295007176`*^9}},
 CellLabel->"In[14]:=",ExpressionUUID->"3cdcb71d-a6c7-4ef4-aab5-867a8020f55f"],

Cell[BoxData[
 TemplateBox[{
  "LocalObject", "nso", 
   "\"\\!\\(\\*RowBox[{\\\"LocalObject\\\", \\\"[\\\", \
\\\"\\\\\\\"file:///C:/Users/DELL/AppData/Roaming/Wolfram/Objects/Resources/\
f95/f9519a0f-2f42-4ef8-ba73-b05c928596ae/download/TrainingData/\
2992664539ec521f/data\\\\\\\"\\\", \\\"]\\\"}]\\) not found.\"", 2, 15, 4, 
   26831890449386043475, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.893591430824521*^9},
 CellLabel->
  "During evaluation of \
In[14]:=",ExpressionUUID->"71ac6d2a-ec9f-4d5c-b672-da88573dfe3d"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1: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
V9mVpZPVem9SG7wptyfDdvPbYbbj1eRlhzWb5F3V8+4y/6Gfq3nkNefpRdzq
kG6IBKhEOGdSab2eeCpSzKaqyXj2zOb0eMJjiJxA1AMdfoz7BFJD3nLG7M3U
LhqXj+3xt/XRx9vJ47//8ctDvVRzmD73wr/v+v78tvm+EUkb97zy9aTlVL0l
EC/S1/GKxWAPBrKZZD2ba2VyzaA/Zrd7H0BqCtHOcKcYbwLx61uH8WAyW72o
D7/yO+Pv+lf3v/3809vR+Jf3b/7x3c3nQezzVbGfcGVsMv2e8GSFvTsHiZZ4
WoUyfJ4pF/uV8iCX75RKg2Sy7Hb6af4T8hX+iPBa5HxaZYxG86lct9S+q199
bI4/1Xqj57ePf/v5t7///PNPHyYP3dzTRaUWPXMp9k9XFze5zI05WCdT+rzR
fL5dr15mEuWAJxIOJBORtN/9P/4DLUGf1vkVn8MXSTcyhUG6MioOnmpX7+ud
i8/vpv/8869fPj9Pr7pX7eJVM18Iu7WHu6953FUuKN6Yj4XT7rNYJFpIxquJ
cC7gPneanF6Hx2110eb8l8+ZoPzUliScqJQ699XuQ6YxzrQm5d5Drzv4w8fb
v/z+8cunq/c3tbtO7rIULZw75Ps7cyQ+R4Abywtul9dkcroc55EQLVGOBpMu
s8tpcTntnkeY8wblP6LcO3w2rzQW25PB+IfB44/12+dcb1pojRvlyk9P7b/9
MPjtm8bn21wzQkf01CHfE60tcdk4j8L4bEK4tLC1seG0eZr1Ua1+k8s0Qv64
xx3yeSOPMPeJ5sPce2KuZjpL1Ual7rvu9Ev38cfq+Jtcb1LOpqat8B+mxU+9
80nO2Qjo0k6p8WRzRcDl8QgOGyMxaJaD8zn4zsZa0BeqNW+L1ctEqhaPl4L+
5JR2HuXT5t/j/IZwP20/T+Zb2fZj7fq5+fC5PHqqFrI5j/qq6Hxq+GoeWcZ2
em6QyEXCtQXeHJfkEDAOMmYJdJ5DvOKR60uvjAZbrthKpavpVDUSyk5R3sPX
h1bhtUF+lf+6qLSGoo1Uc1K7eW5ev7nqt4pBU8x+lPOcpuyHEeOBSymSbgvX
F7h8HGHDAAmy2DA4iyHLPHJ1llqe58ul8mAgEo1kYtH8PcK9R3mT/0aoR3/8
GZzGgjjgzQcz/Wx72rl5+ubx5vm6OmmG7xrBRszskm8rd4TiFcH6AmeWQCgI
4NEVgZCZFwIc3H7FWRVQAg55vC/xngXC4dyEvrMQzhiif3s4lyBxC1H1Q10q
NwymeuHcZX0wfhjV3nZjk7r/uugJGw91+8vynZWTrWXR6pyAg5EIQOIQDLEQ
YOb1PFu8JtgSCl5xqXk2pZAq/cHUfwDrVR1b
       "], {{0, 32.}, {32., 0}}, {0, 255},
       ColorFunction->RGBColor],
      BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSizeRaw->{32., 32.},
     PlotRange->{{0, 32.}, {0, 32.}}], "\[Rule]", "\<\"cat\"\>"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJx9VnlQk3cabms7tVUORaW1rbO6be2OXR21KN71RuQQCEcRqErCKWiBAAmB
QO6DcIWEKwcBgiQkhJCQ+74PDgMVDxR1bbd2a6fttDu7M/vPvsROZ//ad758
832ZL8/zPs/zfr9ftl+7kV702iuvvFK9Fk7pV+tOVlVdxWREw01mZXVpcSUK
eaGyBlWMqoq/tga+/NPvn9Xr/1Ovvvrqa+Fas2bNm2++uW7duvXr18P5rbfe
evvtt6Ojozdt2hQbG7t169bt27fv3Llz165du3fv3rt3b1xc3IEDBw4ePLh/
//7/RXsJCGivv/76G2+8sXbtWgCMiYnZtm3bnj174Ifx8fFHjhw5fPjwsWPH
zp8/f/bs2TNnzsBFYmJiQkLCuXPn4PbUqVMnT548ceLE8ePHDx06BFCAExkR
CTjQzI4dO6CNffv2xccfBJBTp05fvJiUk5NbUlxWcb0Sja6rr8fW1WFwuKaa
GnRBQUFKSvLFixeTk1OSk5OTkpLgGrj+IDp69GjcZ58dP3rs9MlTZ06vdgLP
pIQrNTUlKzO7qqq2t0dg0Dlmg0szwYXwsehxz6mURi6nv74OAxSXLl3KyMjM
zMzKyMiAayB6qQXUff7554kXLgArcKempmYiEFlZ2Tk5X0DDOdm59XW4SYV6
IXTv3t0nXy8uP1l59svPv/77X//54YefPJ4Zg94+KBQ3NuLz8/Ozs7Nyc7+A
ygkXsAAaNLlq3cXEi0lJoC/1UioCkQHgmZk5iIwvUMhyqUQxEwx5PbOjYjmx
habX6J8+fvrji58ePnpqMNk4HJ5QIObzhhqwjVeuXAEhubm52dnZwJIdrqys
LNCy2npKckpqSlp6GuCnp2cgMrKRhWVtLK7N4vV55wW84atfohDp2WNiid8T
NJscA7yh1nY2Go3paOcOD0k6OrhodD0SiQQhly9fzg0rgTMISUtLC7uXAVxw
Cx6CqLy8vEYcfkg0FvCH7iw+8LkDWpXGYbEtP3io05m++qpu/774s2cS+LxB
l9NrtToEQhG+uaW6pqa4uBhUvKSAArqXFIhwAQUCkQnpFxYiOzrYsvHJ26Gl
paUHD+4/eLzyaOXh/ScrK3qtqaYKG7f/6NHDJzhs9mwwsLx83+l00BmMGnRN
eXl5UVHRtXAVAkpYUXp6OmSfk7PqW2Ym4kJCIgpZwunulY1PzARnb8/NLy2G
VpbvLi+FfE6rWCTCoLFZiFxkIYrX320xqkPz/sXFudHRYRyu4fr166WlpSUl
JWVlZZWVlRUVFUAEbQNyXt7lgoJ88Cw5KeXaVVQrs214aNio0botlqDTvuB3
353zea0a47RCOSGTy2QarVqvkemnpUadQq9TCoUDNCqlsbERg8Gg0WgABwrg
uhouEIIsLFzlQmQmnDuffzmPTCQJeXylfNysnXaZ9X6bacHvCrhMFsOUalKq
kI/ptEqzdkKvkkzKRsQjgq6uNgaD1tzcjMVi6+vrq6urgQLkFIZhi8OFQqG+
zC9ITLgAZyadIeTzJ2RjWvWEWT/lME/7nIZ5n9VtUWsnbykkg1OyYb1aqlfL
FDKxUNDX1dXOZDKIRCIOh8OEC1TcvHkz3HjhH/hXCr5MT0svKynt4XCnlEqV
atJk0nk8ttmgK+iz312cCc24XJZpg0pqUEutZpXJqJqQj/EGent7uEwGg0Qk
goSmpqaXFKAC4gYCiAS8QiGRBfn5hdcKG3GNYL7D4XS63R6fN7Rw+/Hjh8+e
Pf7226dPnz68t3R7JuB0Oww+n81qM0glox3tbW0sFplMbmluxjc14ZvwJBKp
paUFKCAF5LVCQEYVFhahkHl5ucVFJRQKQy6bBGyv1xsIBhYXQ4+fPHz+/Te/
/vbTb//8+edfXjx//uze/cXQwqzb45pSqrjc3kYcDg4KiUyn0ggtLXCAEPDq
xo0bRUgUGHK9rLy8tBTWD+ifRKTI5cpAYBYE+P2Av/Do0fJ3z7958ePzH158
9/0/vgWuv3/3t3v37ni9Po1GPzw0SiAQoXMyicig0+gwSWQSSIGsYUTLS8vQ
1TUNmAY4X71yFVIgEAgSybjHHbBanR6Pf3Z2bmFhYeXxo0crD76+Ay9EYP52
8M5SKBj022wOtUo/KpZ2drKpFBKVQmQyKEwmlUIhkskkPB4PEd+svFFfW9eA
xVZ/VYVCFcH7AdJEohGD3mo0WJxOj88XgJqbn5ufn/H5XHaHxWoz2Wxml8vl
dvtgORqXKrrZnK7Oto52ZhuLxmJSmQwqCKGQybUwRlXVmLr6WnQtTCwKhQRF
RCJZJBIDuMlktlptgANBeDweYHG7XVar1Ww2OxyOYHDW5w0YDOaxMSmXy+Ww
OzhdLJhTFoPMpJJaaTQKkVBTffPG9Yqaqmogqq2txWIbmptb2to6xOJbFrPN
YrEAGkC5Iezf8d12u93pdPp8Po/Hp9cbpFKZSDTcw+3hsru47E5OZ1s7k0Yh
NFEIeAqxGVuPLi8pXbWovp7BYPZw+3p7+wcG+KOjt/R6PUAFg0GABUBgmZ+f
n5ub8/v9wAWiTCbL9LRWoVCOj8vFI6MDvf393J4eNiiggQQ6hUAmNNXVVleU
lYPzMLTsru6BfgFvQCAUDt66dUutVgFUKAQ5Bu02GxxOlwN8gi3BvVoeq9UO
+oBFq9VJJeO8Pn4fpxdiYDEoLAaplU6iU4hYTB3439yEb2W2dnV1dXd3Dw4O
jo2NyeVyjUYDtkOfq34b9SaD1mzW2Wwml8vu93lBCKgAXWCgVquVSqUCAZ/H
6+/v43S2M5gATiNDwrgGDLG5hcVsZbWy6HQ6UIhEIplMplKp9LCXmIxmk8Go
0+inp0w6tVmnshu1fqft67nZ5aWlmUDAYbcbjUbAVygUQliG+np6uN3sjjZI
gE4lUciEBmwdHtfIoNPhFWcwGGw2m8/nQ/9KpVKn00HbVhOMqc5q0DhMWpdJ
E3CYQz7XnZnAnbnZ+VmYHy9kZDKZ4PmRkeH+vt4eDmegp4/fyxPyRELYRhnt
gE+jUFuZzNbWVhizkZERiUQilUhgkddrp51Wk92kM6gVpukJu2HKZzPMeh23
A94ZrxtcAosgCYh+cnJSKpWMDA/19/bSybTKsgpEWvqxI0c++fhjAr55dd2g
0WDN5A3wAF8shm1KJBAI1Kopp93qBAFKmXJMpJOPOvQq8Cfo8/j9MJ9uMB/G
DJrn8XiwJlRWlKelJO/99NP3Y7e8u3nj5pjo6Mj1tTXoxgYciUDsbO/o7x8Y
GRYPDQ0LBEKxeFQxIddr1UbNlFo+JhvhG9UKt83k8zggWJfHbbFaABySGh0d
pdFomYj0Qwfjdn2y80/vv7cxMmJj5PqYqMgNURHYegwcDRgsnUqHbRf+FQgF
Q0MisVyugC1AO62anpTJxINifo9KPm4zGjwOu8thczntMADQOYB3dnZeLy8/
fODAn7dtey92y5aYjdFRERujoqD9jZGRNDKVTCC1NOFbmsAoKiTC7uT29sCo
8QeFQpGAL+jjdLPolEYMp5U1eUtiVE1rJhRTMGRSKTxAJBDgT9uRQ4d27tj+
QeyW2JgN0HNkxLqoiIgNERHR69ZlXko7ffR43F/37P7o47jduy8lJt+sqKJT
WazWDljMaSQSpaUZW1OVcym1KL+gsaaWRSJ30egdVBq5GV9ZVpp0IeEvH324
7d13PvzgvY8+2LrtnU2bN0Rs2RgZE7Vuc9T62Oj1/wUQKV+g
       "], {{0, 32.}, {32., 0}}, {0, 255},
       ColorFunction->RGBColor],
      BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSizeRaw->{32., 32.},
     PlotRange->{{0, 32.}, {0, 32.}},
     ImageCache->GraphicsData["CompressedBitmap", "\<\
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\
\>"]], "\[Rule]", "\<\"dog\"\>"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1: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
5WCSHBRV+flQDwuodllQAI/K3u8BHtZgIkpUWFFjHSrm494S4aBBLEhOBula
wKPt5fouyMfb7NlFPJsNpNNO25J0lYvzilB2DtwrronoSNFxcnqm6WixY1eF
ttBLgSAdTLCfXxEGPCx5Dxg1qMRG9aSYDr/NKGESi/FVpTTsOwn5nZZaNtoF
1XTBbm8zt3cHtzf791d76bjNtyJOLdKjY2RgbINaYmqmMT3XcjhHcY2Ur3cW
Am11cKBuUTXQbp8ca5egPdq62CQloECtDJaPiXsG+xpp+BIRuURNLTf0Vmh6
K5+eT395OX99Pnl5yF6fxQ8jG1fh2XObJDrZHhtvSs1SDhap6akG4D+5NQhz
CgDzI11SlEtF8mrIbk2jTw9cB/UOMXZN2BDwrs9MizmdSC4ZImkt13bDdbTq
m4+p24/7Xx4yr4/HD9ep3JHvMmM79M7ufhjan6LExhuTS+3J6Ua3AudSEQKa
uqCW5NfUubUNbjXJJsU7ZMTEAju2ofFsG3fjjtlpsUrUJaOTpDS0oheh6UGc
nEbOTsMvn7K/veTurwB+4DTjjnmWQ6ui1Dx119gQX6Ell4d9xna3odmtb3Xq
KBYp1iTArLKqV5g13nnB9VHwKpc8OkkcHoaWFlRTRuH8ON+ooE0CdyIDf56L
nZxFHm5Sv3w6ur9OXmWDZ/uuhHctaNLFdkSxHVnaM3HkXYhvKaOb8ti2Lr6j
DSxy7QaaVdMZWpZdpJ0P18mbs/jNafIqE3aapmYnxKYV9dwYb3VSMK+kfX46
uX04fLw9BOr/8HH/5ix6fRLOAhMRWN2LmdJxc2537fnQ/jll/nxgfsrYnrPO
p0PbQ8L0mNj8eur/7Tr2203s2+Xut8vY1/PISXBtaWzEsSo1z0lMUwLT+MjX
b1eAXr+cf3k8ebg7fASyeMhkj4IH2WDmOLEfMV0F5n/N2l8PLa9H5m/H1l+P
HH8+8/01F/z7ZehvV5F/foz/cb/3r7vYv+9i//oYeUmb3Au80IogtqYILoo8
s+znL6d/+vXm2+vF09PZ589n959OcpfJkwtA+6dneynv4olz4jwwe+abPvFP
nwVnr0MfHuPrLwfW33OBv1yF/nEbBch/3MX/cx//42Pol9T63qYstiw62FTF
l8XBeU7uY/L2MfPp+fjpS+7+4eTiKnV5c3Bzl728Tl/m9lLu2eSWPmHR7ll1
0W11wqJPO8YOHMZj38xFZOlTcvNr1vanE+fvp66/5Xz/yLmf4ktpszq6KEyu
SiILAt8MK3eVOL2M3d8fvr5eP34+P88lPz9fPH+5uL3L/OBPJzY0e1Z9wqqL
mbVxiy5pGz1wjR/5pjOeybPg3NXu4l1s5XFv/Uty81tq82F3/siuD82x/VND
DsPgjrbn+fH48+PRl09HX3+5enm9eXm5+v23Ty9PubvbzOnJ7r5rImnWx3+Q
d82jUYshYf0/P+udzvqns8GZXPjDbWztIb7xKbZ6HZo9dhi8k0NWQ69J07ss
o/4XFA85dg==
       "], {{0, 32.}, {32., 0}}, {0, 255},
       ColorFunction->RGBColor],
      BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSizeRaw->{32., 32.},
     PlotRange->{{0, 32.}, {0, 32.}}], "\[Rule]", "\<\"cat\"\>"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJxNlXl0U1Uexz0zf4zIMlBK6d4m3dIkXZL0ZXvJy8vWtE1p02zN0iVps9At
bZZmz8vL3o1uIIKgtg5olYO7oKLDEfA44oIOODjO0cN49BwRUFQODjqMc1Oc
c+adb+65777cz/f3+9173yMMjCttv7vvvvvc94NGafYJXS5zQLUV3Ggc7iG7
w2ppdXisdquLPfB7MFj+2y/bD2GZeGo+Pb0MtLL61F8vXk6mFxPpxXRmKZ1e
mJpanMnMz00vplNzsfhUHCiWAYqEE0Ef5vMEfZNBvzfodromxkZH7dbdg32D
RrVZrzQbFL2a9m6FLByd+j/+2qunTseTC4nMYnoK8IHL4lRmYTozn0zM4vhU
DAf8KTyajmJpYBEO4AFfOOAL+b0Br9s9MTo0BPgGpVmnMOk6e9Xy7s7mEJbl
J9ILIOxUBmghk1lOgeAzS6lUNospYAGeJmbj8ZlkYk8qMR+PzUWjUxiWioTj
kRAeCkSC/pDP45kY3W3r1/dp2ntUbUZli0Ep6+6UYvhMLDkfBzVJLcaSc4nU
QjK5kErNxxN7YsnZdHo+nZxPJeYSidlYfCYFUgPj+AwWWU8hlIiGEziWjISi
XrdnYthu6dGaNR09ylYA13c1azsk0fhsLLknnl4A7Usvv7H21AvrLnOJ9Hw8
NZdKzWUjx6dB8Ims9uAgnth0JJwMBeNhoEAs4IuAKnmc7lG7pb9b0dPVZlDI
dAopkKZDHMGn8cRcPLUHj828994Hx46/EMXnYrH5SGQmHJ4JRTLBUCoUTIXD
SQybikZno9FpDEtjkVQwEAv6cf9kxOcJTbr9LsfE7kFTv65L3ynT7pJoO8RA
qnZhCEthsSkMz0SjmTNn3n7o4Goslt67NP/o4eUjqw+tPX5gbWX/kcP7DizN
ZBKJYDAVDKaDwTgI3ufFJj0g7IDH6XOOexwjY7sH+vt0CsBXt4vU7UKVHFXJ
hcFIEliEo+kwlolgM7Pzyx9fPPHd1TfvfH/ul3XduXnu9rdnv//69GcXj5x8
0h/H3H4/gOOTnojHHXJNeCfGnKNDjmGb3dJrMKp2qeUShUzQIYU7m3ldLUg4
mongWWH4VAhPPffYw19cfvnDd4/+eOPsj9f//MO1129efe3G1yevf/XqN1dO
Xj4Tmooa8agzFMC8HrCmIZ8z4J7wO0bHh6w2k75b2SZpl/DkIk6bkC0XcuRi
rsPpH3f6nc7gxITP5fI9d2zfrRunf7555qcbZ366fvb29TdvXzt965vXfvj6
5NXPn/r0XAR3KiymtmBodNLrHRuZHBp1jgyPDltGLH1mo0ataBW3iWCZgNUi
YDfzmSKYMeEOOt1Blys0Pj5p6OlZeWzqh5sXfvrx0t07n/36nyu/3v373TsX
7/7r4i+33r/x5dqXHyZcVplMxDT1qftNvV6X1Tky1Ge0mwzmHq1B26XobJW1
iVEZAksRjoTPEsOQyx12u8POiTCGh3RGw/LePdeu/uO1l545sHdvDAt7XeNu
x3DE79o7n3nl+ZWPP1g1aVGRALJajQaTpkevPPnE8IHp3cODdr1Wr+1U7GoR
twr5MgEs4bOz4jFdrrDLjbndofm5eLNc8c5bR48/nWJxETZPyOaL2FwBBMEU
Mq2hgc5mccZHHPsWEzZrj9qgMvcpOVzO2kHrhReHVxcHjFqtokXWIuRLEbaY
x0Q5jKzYdI8HwDGPO3z0T/jKE3uuXJ59fH9vfmFRfmF+SVkJsaqCWFlFpjZw
YA6TRbHbDPJd8lRqctJj02nbmBDj0IL14inHmWOD3iFVC4qKuJCQ2yRg0xFW
I5/ZgDAbJiejXg8eCOLvHI7ceDLzwarjxaPjMB+uJpNKiZU5OXn3/2HLpo3b
eYImX9DO4jRAUG15aZnHo/N5hyAadOKI4/Kb/vdPjh/MKFuFAgAHYa/z6/nM
eoRZny2+Ozydjl9olX3OhT7ZP/LPj/d+8tH+995aPvPGvmNPpx/eH0ziQzF8
bHlfEotNGo1KnaGFTKUkcNPRFc+XF5eu/CXxt9e9zx/SqVqFIj5HCDMFnGwK
AnYjkN0+brOPRwPOZxyyBwPCtcf0Lz3Rd/yw5tlH+19/xvb2K2OXzvo+PR/5
6Fz8wlvTl95fOn928ZGl3adOPHz61LHb35+/fevSrZvnr31x4tghu0rOkwlR
MQIDFxGXCSxQDs1mA1+fUcfwwNJ050Kq9dmVvtXl7n0pGe7kBhycyASc8sIZ
P7yANR9Iy1cWlU/u71570PDuK+5P35797soL/77z1d2fP//u26sfnX93d3+X
WMDLwvkcMcwWciBgYbGMDg6ODJpMfjtzIdgigAhFRTkShOi0MUZMjLG+RqeZ
Nmaijlsbx630sQG6wwSNW+onzLSkG8U8zUGn9viq69TxhU8+fNltV4hQRIry
AR/lshAOhKzzLYMjpl77cC+iklMriLVdCj2RQGoXE4Z66gZ09WYNyayttujr
BrqpJk2dWU02ayi2bkqXlLQzJydn6zZyZV7Cg8wEpKo2vgRFpShyr0QozEK5
TJt1DNTHbB4RC5DK8jyDru/QwSODljFy1Q61vEqzq9rYRTJpau2GOru+3qJt
HNDUD6qpgypKbcXO9jaF2zlJriH17AIjjS1ivhhsUSRbIiGPfU+Ab7eODQ4M
iyXthPLKrk4t+GBZLcMPgGvD/Q9s2LB544atWzbt2L61cGduaVEusTS3umIn
jVxQVLAdC8X3Ljwkk8iQprJmuFYI88SoQCwA9eECCwGXyWc39ffZTH12o87U
LJExaIya6tpd7V2E8vKNmzdt2vzHzVu2bNqyZcvWrdu25eRs2567LTd32468
vIK8ncUF+YW9Wr1zbIJMIm18YMPOHbk8FkuCIpJsfbigOKD+gN/Xa+vttXSp
9EyIQywnlJWU5IMrL6+wIB8gigsLiosKSooLCaWlhJLy8pKSsuJiQnkZuCVW
EIuLiivKiXm5ufm5+YSSQi4TAkVGYRA5C5ARDhNY9BptRr1FozZw2Nza6ioK
iVRfV0eqriGWl1URyirKSivKSoAIJUDFpSVFJSWFWceigqLC/HJwlZaVFReW
lxRVV5TBUJOQx0N5HAHMRmE24HMhur57AEitMggQHq2hlkKqoTU21lHIpKoK
Sk0lubqCVEUgVxNrqyrW+8R7qqksJxJKKWQylUypriBQSRUNlCqYzUL5fCGf
J1iH89mgPlB3t1mnM6vVPRKRCKJTaqqIYAqZVEMlVdLra2h1NY3UKiAwnUat
ptfV0Kk19DoSGK+pJFBqa8Gfa2sqoUYKi16PwDDKR1Aej8/5jc9jNWk1Jq3W
pFb3tsnkfE4TRG/IvovrqUw6lcUAsyhMOplJrwUdFoOabWlkZmMtRKPQ6sgN
dVQgMAVmMQBTyEdEiEDI5wtgLpJdAojHbtKq+0F9tOreDnmXBBWiMJfHYnKZ
dJhFB09hNoPLonOYjVwm7Z7YUAMbaswOQgywoDCLCWhgz4Oy/I/PQ7jgcLEB
H2YyNKq+bo1JozIqOlQtEpkYAQmys+5g9bMttO7SBCLMip0VD7weweuFD2dP
q1DcIm5uFolF2Yl8IAAHpqAyAM5poikVRo2qV6M2Kju18pb2ZrFEIkRRhC/g
wVmBzQbE4/BBPGDVwMbgcYEATSoUSYUSmUjWIpJJUYkIAScXHC5UAMPAYn2L
QjDEUHTolV1GlVIHTm57G/g+y2XSVgmIBxVmJRBkU0YEAgQRgn72FpwgVCYG
ZGmzMCsAl6JSiQCkIADxr/PZPBbEhRgcBv2/4sx4cA==
       "], {{0, 32.}, {32., 0}}, {0, 255},
       ColorFunction->RGBColor],
      BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSizeRaw->{32., 32.},
     PlotRange->{{0, 32.}, {0, 32.}}], "\[Rule]", "\<\"automobile\"\>"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJyllGlUU2cax5N7b+5NEEFEcUEEVHYS1uwb2dhDFnJDSAghREjCviOgWBDZ
BUqCAWRHNhUVxaVWahenttOpzrS1ndOZfhhOW+ecOaf9Mh/m47yJXajT6XyY
nH+e89577v09z/t/nveGFlerSyECgVBPBkFtbhbV1ZlbcveAC7yq3m6tKjmZ
UdVQYi2pYxXD4GbID3/3GkKIOwT9KCKMENxCCTAJhhEUJpFglIhgRBIG7RBM
wpBfFXgDJkG/hAMRIBKBSCIQPAILD58InoQ96//gQ4CzU7/NBwWDFESESCBB
BBQBgkDxbiGeSETQV/me1D/rf/ABB0EhjxGgVohEdj+KoigGFmQYoZBQ0iv8
X7XlvwmgAB8hkQASpIJhdxIi6AIoDKUgiC8JxX7b/19j/uweTIYhDOyCsAsj
7POGwo76BASSuKKw6LhAlAw67EXC/k8+0T9wl1gWKxEeb63MGO7SltcLWs8p
alvkIWF7YLf5CEqGfiOFh0n8cSReduRneZGJqenBZY0MlSZGLY27t9YyMa01
FBzL14VLUkN992PAPxgiYGQiCYgCBKFkAooBwaj7R/Z07+XUeQabBO/k7/VG
clVHi8sPWu10q0G4cNG0ctXYdU5WW8mwlyUbinlyJTMm5qC3D9g1AcaIGAX7
pT/ABOIOPvQK35sM6fHw5obgrjNs15B++pLONZs78npub3da22lGU6ugooZZ
Xs3U5FGjqQfIoOFgwNDdCOaFYCSETEQogAx5yoZ+Mmonn4LBIs6Bnlba2Hle
12lhd3/G+HzRmKt4ZDi3t5fb3c19rZPZ3JZQXZ9YUy8VSaK9fUBLEAgjgcGA
yZBb4Jj/cNIQD5+wk4+h5EB/rNIQu3Wlevsvy1fWT7356PUvvrjtGiu56MgZ
7hcP9kn7+yVnO7hNrZyyKqYiNzIk3JviQ4Sxl264sWC4ERIFRkhuPvpLPtkb
bPVEALmhOGXr1sA/Xrzz7fZ7327/YfVyZ1dnumMwe9JhGHfmDwykdp7ntHcy
G1oSDZawTGUoNf6gry8KjEHdrQeJMM8WXuWD1GTy7l0YJfiAl0XLuj5z5ruv
Hz9/+mBjfaS/TzM2jC9Pla3Ola8tnVxZNjovZvVfEL/Wxa1tSC4vZ8mzI2Ki
/Hb5EFEKwT3qbj70Ch+lgB5REIofxQuJC6Vo+YE9Tco/fnD9z5/fXV1rcDnz
p5zGOZfJOaRYmC28slY2M2O6NJnnHFWcPcOtq4mzWSOkGcEBR7zASYFgBPbM
KgIOBUgHeoKBThEhMgpRfFAyenA3ksMJtumP11s4m8s9L7YfvPPuhclpfdd5
wchwWlsrfWJcv3GjYe2yfe1y6cJM4ZRL23tO3NzEKjBGJyXv9/NH3Z9ilEj2
IgOhFMwdvRCSF0zahWEUkg8GJUXua69LOGOLPGOJfLhe+9mnjvFZVWsH7WxX
0sCgeGXZsr5WsTxvv7ZSubpgX1+qWp62LU4ZnCPyllMCbX58bEKgly96JDDg
8KH9QIGHA44G7Q0M2n0wyC8wyP9E6P7wI76scD8Nz7e/OmKhnzM7JJsYEne0
U+tbooed2Vv3Wp887HKN5i/OnFyaK1ldtIK4MGNbmLe7xo3dfYraphSFhspK
jqVFhcZGhlCjQunxxxJoQTGxIbFxYQnxYcm0MHpkpCQ22MAL7CiOGmuNv+aQ
3VjAO85zZi6bP3q7750brRdH8HFH/uLcyZXL1qurZQsLNZPTNqcrz+lSjo7J
u/tlMn4yNymKTjuRTD3Oop1IiAqNjgyj0mKTE+OS4iOocUGs2DAp9Xi+8HBH
2bG5c8mzg2LnmPLx+/3P3hrYuGRdnCocG8EH+1TDw+qhEcXgqHbAiTsm1Bcn
FE5H1uSEhkkLY8WFcxOj2PERLFpU2JGj/r7+fr7+B/z3HQJdOrDnQMDe44cC
aEF7BTH7O+wJI+2sR2+c/uzZ+Nbaqeke1eq8aWXRPj5WPDtXdmnW4pov7HPI
z/WJOjoFvV2pzmEdKyGST6eyE6PEnMQMkYBHZ0aciAjw99sDPkcwISb6MJ0R
EBtLjo/xD/TdZcLDN9dsf306+Wxr8Hy1ZKhNeP922e0bjatLzSurp2eX6q5t
tly5Wbu0Vjo5ZRgaVPd2p7PpcT+JlUzjshO53EQBJ0bEDClSJ0w5lK9fEA0O
Cnp6hSWlUR190g+eDHz14dSG095fx58clD56UPnRkwsfPpl98ObE5gPH3fuj
G7e6V1Zrrq5XLF8pnV3QpYr5fHYyl5XkjpwEBiOGzaRmiOM6GvDHm+cerdtm
h1Rjvarrly0r86q5ed32l4uPllobdbTf3++8uWrpeY3uGFJv3u55/uXmx59f
//jp1cfvTt663X5to/ba7cr5ZROXEQ/EZyWKeIwUPoPLShaxWRJGnElJP98o
n+o39zZkqgX7qnSRd2atn97v+Phm21CdyK4Nf+9h39b9s5P92Y5e+cZ600fP
pu9sDcwvVLjGjFNgYteqNu61bdxtZiVRecwEIScZpOCyaAJOoozHzuQz1BJq
QTa1FOdX6FOsGoYmJaTRxH643Hhz3PLmYvXb10+9dbf95krN0we9X/9p4ZO3
Rr95vv7PF4++++bus/cda/OVoxfyXM7C6WkLIL+UmM9M4ccLubQ0AVMtE2jT
GbrMpCK1rFAhLlIIrbioQi9ptqYYs4Ir86NvTJffX2/eXGm6Nd3eactoxOmj
FYrNwernm8Mvni796+9b32/f+dvnKx++OwKwwBkRjwnqF7BjMsSJmSJmbipf
l8UzqoSFeHqRNtOkkRWpxTZ9ms0oabJn1xYKW0slZnUUnn6CF3OIHuwtCPbW
xR3q0gp/d6l96axpa7rtkzfGtp+tfv/V3Zd8UD+HThNxqHIZPUvEUKfx8Aye
CZcWF6TpNcLCPJEJF1h0Ikt+RqVZU1ekbihS1JmzrAWplsJsg1JgymSaJXFV
mfT3ZrsblfRSWVS5IqGhgNdly0wVcdPEPBBBIrmMp07nKVM5eBa/QC0p1EoM
eTxdLsug4Zi0PHOewKiRlepVVm2OTSu36uRFuswSS25JUU6VWVFjzGwuyu6r
0tZqBcUZ8RreMTnziIp+FGAlApZUyJaJuDlSgULMyU3n5in4VlO2QSM04Dyt
kqWVMwsUXKOSb9SkmPOkxblSk0pSiKfpcyVmXboJl1kLskCKRit+qlLTXK5s
tivK9aIqg6QcT0nxTE4Kly7mMdIE7EwhE9SvSKNrFVw8h5OvEmhzeNosjj6b
r88W5CvZJpxrULB1co4eFxs0YrNaXKQSmXGp3SgvM+VYLVlWS6atKP2kTmTP
l1p10n8D3GklqA==
       "], {{0, 32.}, {32., 0}}, {0, 255},
       ColorFunction->RGBColor],
      BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSizeRaw->{32., 32.},
     PlotRange->{{0, 32.}, {0, 32.}}], "\[Rule]", "\<\"frog\"\>"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.8935918527032623`*^9},
 CellLabel->"Out[16]=",ExpressionUUID->"0b74b881-8f72-4762-9404-8d44791c82eb"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"classes", "=", 
  RowBox[{"Union", "@", 
   RowBox[{"Values", "[", "trainingData", "]"}]}]}]], "Input",
 CellChangeTimes->{{3.8935954134422803`*^9, 3.8935954134422803`*^9}},
 CellLabel->"In[17]:=",ExpressionUUID->"8745c4ce-9843-4902-83fd-a2b59bb714c3"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"airplane\"\>", ",", "\<\"automobile\"\>", ",", "\<\"bird\"\>", 
   ",", "\<\"cat\"\>", ",", "\<\"deer\"\>", ",", "\<\"dog\"\>", 
   ",", "\<\"frog\"\>", ",", "\<\"horse\"\>", ",", "\<\"ship\"\>", 
   ",", "\<\"truck\"\>"}], "}"}]], "Output",
 CellChangeTimes->{3.8935954160343475`*^9},
 CellLabel->"Out[17]=",ExpressionUUID->"5d126281-8075-4a13-adf7-6392fc85f727"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"lenet", "=", 
  RowBox[{"NetChain", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"ConvolutionLayer", "[", 
       RowBox[{"20", ",", "5"}], "]"}], ",", "Ramp", ",", 
      RowBox[{"PoolingLayer", "[", 
       RowBox[{"2", ",", "2"}], "]"}], ",", 
      RowBox[{"ConvolutionLayer", "[", 
       RowBox[{"50", ",", "5"}], "]"}], ",", "Ramp", ",", 
      RowBox[{"PoolingLayer", "[", 
       RowBox[{"2", ",", "2"}], "]"}], ",", 
      RowBox[{"FlattenLayer", "[", "]"}], ",", "500", ",", "Ramp", ",", "10", 
      ",", 
      RowBox[{"SoftmaxLayer", "[", "]"}]}], "}"}], ",", 
    RowBox[{"\"\<Output\>\"", "->", 
     RowBox[{"NetDecoder", "[", 
      RowBox[{"{", 
       RowBox[{"\"\<Class\>\"", ",", "classes"}], "}"}], "]"}]}], ",", 
    RowBox[{"\"\<Input\>\"", "->", 
     RowBox[{"NetEncoder", "[", 
      RowBox[{"{", 
       RowBox[{"\"\<Image\>\"", ",", 
        RowBox[{"{", 
         RowBox[{"32", ",", "32"}], "}"}]}], "}"}], "]"}]}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.89359542845992*^9, 3.89359542845992*^9}},
 CellLabel->"In[18]:=",ExpressionUUID->"ec9b52c8-3eea-4e3d-b59c-392bfde8504d"],

Cell[BoxData[
 TagBox[
  TemplateBox[{
    RowBox[{
      StyleBox[
       TagBox["NetChain", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open = False}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"]], 
                ButtonFunction :> (Typeset`open = True), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              StyleBox[
               OverlayBox[{
                 GraphicsBox[{
                   Thickness[0.014925373134328358`], {
                    GrayLevel[0.6], 
                    Thickness[0.018686567164179105`], 
                    Opacity[1.], 
                    JoinForm[{
                    Style[
                    "Miter", 
                    NeuralNetworks`Private`FormattingCommon`foreground], 
                    10.}], 
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 
                    91.5}}}, CurveClosed -> {0}]}, {
                    GrayLevel[0.6], 
                    Thickness[0.018686567164179105`], 
                    Opacity[1.], 
                    JoinForm[{
                    Style[
                    "Miter", 
                    NeuralNetworks`Private`FormattingCommon`foreground], 
                    10.}], 
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 
                    91.5}}}, CurveClosed -> {0}]}, {
                    FaceForm[{
                    RGBColor[0.84, 0.84, 0.84], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    GrayLevel[0.6], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                    15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                    103.}, {23., 103.}}}]}, {
                    FaceForm[{
                    RGBColor[0.84, 0.84, 0.84], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    29.5, 103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    GrayLevel[0.6], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                    29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                    103.}, {37., 103.}}}]}, {
                    FaceForm[{
                    RGBColor[0.84, 0.84, 0.84], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    43.5, 103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    GrayLevel[0.6], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                    43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                    103.}, {51., 103.}}}]}, {
                    FaceForm[{
                    GrayLevel[0.6], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{28., 91.5}, {
                    25., 95.}, {25., 88.}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{42., 91.5}, {
                    39., 95.}, {39., 88.}}}]}}, ImageMargins -> 0, 
                  ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
                 StyleBox["uninitialized", 
                  RGBColor[0.66, 0, 0], FontSize -> 8, FontFamily -> "Roboto",
                   Background -> GrayLevel[1, 0.65]]}, Alignment -> {Center, 
                  Scaled[0.0001]}], CacheGraphics -> False], 
              GridBox[{{
                 StyleBox[
                  TemplateBox[{
                    TemplateBox[{"\[ThinSpace]", "\" \"", 
                    StyleBox["\"Input\"", 
                    GrayLevel[0], StripOnInput -> False], "\"port\""}, 
                    "RowWithSeparators"], "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox["\"image\"", "SummaryItem"]}, {
                 StyleBox[
                  TemplateBox[{
                    TemplateBox[{"\[ThinSpace]", "\" \"", 
                    StyleBox["\"Output\"", 
                    GrayLevel[0], StripOnInput -> False], "\"port\""}, 
                    "RowWithSeparators"], "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox["\"class\"", "SummaryItem"]}}, BaselinePosition -> 
               Automatic, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, BaselinePosition -> {1, 3}],
           True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"]], 
                ButtonFunction :> (Typeset`open = False), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              StyleBox[
               OverlayBox[{
                 GraphicsBox[{
                   Thickness[0.014925373134328358`], {
                    GrayLevel[0.6], 
                    Thickness[0.018686567164179105`], 
                    Opacity[1.], 
                    JoinForm[{
                    Style[
                    "Miter", 
                    NeuralNetworks`Private`FormattingCommon`foreground], 
                    10.}], 
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 
                    91.5}}}, CurveClosed -> {0}]}, {
                    GrayLevel[0.6], 
                    Thickness[0.018686567164179105`], 
                    Opacity[1.], 
                    JoinForm[{
                    Style[
                    "Miter", 
                    NeuralNetworks`Private`FormattingCommon`foreground], 
                    10.}], 
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 
                    91.5}}}, CurveClosed -> {0}]}, {
                    FaceForm[{
                    RGBColor[0.84, 0.84, 0.84], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    GrayLevel[0.6], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                    15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                    103.}, {23., 103.}}}]}, {
                    FaceForm[{
                    RGBColor[0.84, 0.84, 0.84], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    29.5, 103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    GrayLevel[0.6], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                    29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                    103.}, {37., 103.}}}]}, {
                    FaceForm[{
                    RGBColor[0.84, 0.84, 0.84], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    43.5, 103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    GrayLevel[0.6], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                    43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                    103.}, {51., 103.}}}]}, {
                    FaceForm[{
                    GrayLevel[0.6], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{28., 91.5}, {
                    25., 95.}, {25., 88.}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{42., 91.5}, {
                    39., 95.}, {39., 88.}}}]}}, ImageMargins -> 0, 
                  ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
                 StyleBox["uninitialized", 
                  RGBColor[0.66, 0, 0], FontSize -> 8, FontFamily -> "Roboto",
                   Background -> GrayLevel[1, 0.65]]}, Alignment -> {Center, 
                  Scaled[0.0001]}], CacheGraphics -> False], 
              GridBox[{{
                 
                 DynamicModuleBox[{
                  NeuralNetworks`Private`NetChain`assoc3 = <|
                    "Type" -> "Chain", 
                    "Nodes" -> <|
                    "1" -> <|
                    "Type" -> "Convolution", 
                    "Arrays" -> <|
                    "Weights" -> 
                    NeuralNetworks`TensorT[{20, 3, 5, 5}, 
                    NeuralNetworks`RealT], "Biases" -> NeuralNetworks`Nullable[
                    NeuralNetworks`TensorT[{20}, NeuralNetworks`RealT]]|>, 
                    "Parameters" -> <|
                    "OutputChannels" -> 20, "KernelSize" -> {5, 5}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{0, 0}, {0, 0}}, 
                    "Dilation" -> {1, 1}, "ChannelGroups" -> 1, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$InputChannels" -> 3, "$InputSize" -> {32, 32}, 
                    "$OutputSize" -> {28, 28}, "$WeightsInputChannels" -> 3|>,
                     "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{3, 32, 32}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{20, 28, 28}, 
                    NeuralNetworks`RealT]|>|>, 
                    "2" -> <|
                    "Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {20, 28, 28}|>, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{20, 28, 28}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{20, 28, 28}, 
                    NeuralNetworks`RealT]|>|>, 
                    "3" -> <|
                    "Type" -> "Pooling", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "KernelSize" -> {2, 2}, "Stride" -> {2, 2}, 
                    "PaddingSize" -> {{0, 0}, {0, 0}}, "Function" -> Max, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$Channels" -> 20, "$InputSize" -> {28, 28}, 
                    "$OutputSize" -> {14, 14}, "$MXPoolingConvention" -> 
                    "valid", "$MXGlobalPool" -> False, "$IgnorePadding" -> 
                    False, "$InputType" -> 
                    NeuralNetworks`TensorT[{}, NeuralNetworks`RealT], 
                    "$OutputType" -> 
                    NeuralNetworks`TensorT[{}, NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{20, 28, 28}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{20, 14, 14}, 
                    NeuralNetworks`RealT]|>|>, 
                    "4" -> <|
                    "Type" -> "Convolution", 
                    "Arrays" -> <|
                    "Weights" -> 
                    NeuralNetworks`TensorT[{50, 20, 5, 5}, 
                    NeuralNetworks`RealT], "Biases" -> NeuralNetworks`Nullable[
                    NeuralNetworks`TensorT[{50}, NeuralNetworks`RealT]]|>, 
                    "Parameters" -> <|
                    "OutputChannels" -> 50, "KernelSize" -> {5, 5}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{0, 0}, {0, 0}}, 
                    "Dilation" -> {1, 1}, "ChannelGroups" -> 1, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$InputChannels" -> 20, "$InputSize" -> {14, 14}, 
                    "$OutputSize" -> {10, 10}, "$WeightsInputChannels" -> 
                    20|>, "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{20, 14, 14}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{50, 10, 10}, 
                    NeuralNetworks`RealT]|>|>, 
                    "5" -> <|
                    "Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {50, 10, 10}|>, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{50, 10, 10}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{50, 10, 10}, 
                    NeuralNetworks`RealT]|>|>, 
                    "6" -> <|
                    "Type" -> "Pooling", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "KernelSize" -> {2, 2}, "Stride" -> {2, 2}, 
                    "PaddingSize" -> {{0, 0}, {0, 0}}, "Function" -> Max, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$Channels" -> 50, "$InputSize" -> {10, 10}, 
                    "$OutputSize" -> {5, 5}, "$MXPoolingConvention" -> 
                    "valid", "$MXGlobalPool" -> False, "$IgnorePadding" -> 
                    False, "$InputType" -> 
                    NeuralNetworks`TensorT[{}, NeuralNetworks`RealT], 
                    "$OutputType" -> 
                    NeuralNetworks`TensorT[{}, NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{50, 10, 10}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{50, 5, 5}, 
                    NeuralNetworks`RealT]|>|>, 
                    "7" -> <|
                    "Type" -> "Flatten", "Arrays" -> <||>, 
                    "Parameters" -> <|"Level" -> DirectedInfinity[1]|>, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{50, 5, 5}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{1250}, NeuralNetworks`RealT]|>|>, 
                    "8" -> <|
                    "Type" -> "Linear", 
                    "Arrays" -> <|
                    "Weights" -> 
                    NeuralNetworks`TensorT[{500, 1250}, NeuralNetworks`RealT],
                     "Biases" -> NeuralNetworks`Nullable[
                    NeuralNetworks`TensorT[{500}, NeuralNetworks`RealT]]|>, 
                    "Parameters" -> <|
                    "OutputDimensions" -> {500}, "$OutputSize" -> 500, 
                    "$InputSize" -> 1250, "$InputDimensions" -> {1250}|>, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{1250}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{500}, NeuralNetworks`RealT]|>|>, 
                    "9" -> <|
                    "Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {500}|>, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{500}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{500}, NeuralNetworks`RealT]|>|>, 
                    "10" -> <|
                    "Type" -> "Linear", 
                    "Arrays" -> <|
                    "Weights" -> 
                    NeuralNetworks`TensorT[{10, 500}, NeuralNetworks`RealT], 
                    "Biases" -> NeuralNetworks`Nullable[
                    NeuralNetworks`TensorT[{10}, NeuralNetworks`RealT]]|>, 
                    "Parameters" -> <|
                    "OutputDimensions" -> {10}, "$OutputSize" -> 10, 
                    "$InputSize" -> 500, "$InputDimensions" -> {500}|>, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{500}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{10}, NeuralNetworks`RealT]|>|>, 
                    "11" -> <|
                    "Type" -> "Softmax", "Arrays" -> <||>, 
                    "Parameters" -> <|"Level" -> -1|>, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{10}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{10}, NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "7", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "6", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "8", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "7", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "9", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "8", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "10", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "9", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "11", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "10", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "11", "Outputs", "Output"]}, 
                    "Inputs" -> <|
                    "Input" -> <|
                    "Form" -> NeuralNetworks`TensorT[{3, 32, 32}, 
                    NeuralNetworks`RealT], "Type" -> "Image", "ImageSize" -> 
                    NeuralNetworks`ValidatedParameter[{32, 32}], "ColorSpace" -> 
                    "RGB", "ColorChannels" -> 3, "Interleaving" -> False, 
                    "MeanImage" -> None, "VarianceImage" -> None, 
                    "DataTransposed" -> False, "Method" -> "Stretch", 
                    "Resampling" -> 
                    NeuralNetworks`ValidatedParameter[Automatic], "Padding" -> 
                    GrayLevel[0], "Alignment" -> Center, "$Version" -> 
                    "13.2.1"|>|>, 
                    "Outputs" -> <|
                    "Output" -> <|
                    "Form" -> NeuralNetworks`TensorT[{10}, 
                    NeuralNetworks`RealT], "Type" -> "Class", "Labels" -> 
                    Tooltip[{"\"airplane\"", "\"automobile\"", 
                    Skeleton[7], "\"truck\""}, {
                    "airplane", "automobile", "bird", "cat", "deer", "dog", 
                    "frog", "horse", "ship", "truck"}], "InputDepth" -> 1, 
                    "Multilabel" -> False, "Dimensions" -> 10, "$Rank" -> 0, 
                    "$Version" -> "13.2.1"|>|>|>, 
                   NeuralNetworks`Private`NetChain`opart, 
                   NeuralNetworks`Private`NetChain`part, 
                   NeuralNetworks`Private`NetChain`selected = Null}, 
                  DynamicBox[
                   GridBox[{{
                    TagBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    TagBox[
                    "\"\"", Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"Input\"", 
                    Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TagBox[
                    GridBox[{{"\"image\""}, {
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"array\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 3\[Times]32\[Times]32\
\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    BaselinePosition -> 2, DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"1\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["ConvolutionLayer", 
                    RGBColor[0.66, 0, 0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"array\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 20\[Times]28\[Times]28\
\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], 
                    Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"2\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["Ramp", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"array\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 20\[Times]28\[Times]28\
\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], 
                    Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"3\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["PoolingLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"array\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 20\[Times]14\[Times]14\
\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], 
                    Annotation[#, {"Nodes", "3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"4\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "4"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["ConvolutionLayer", 
                    RGBColor[0.66, 0, 0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "4"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"array\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 50\[Times]10\[Times]10\
\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], 
                    Annotation[#, {"Nodes", "4"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"5\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "5"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["Ramp", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "5"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"array\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 50\[Times]10\[Times]10\
\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], 
                    Annotation[#, {"Nodes", "5"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"6\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "6"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["PoolingLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "6"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"array\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 50\[Times]5\[Times]5\
\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], 
                    Annotation[#, {"Nodes", "6"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"7\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "7"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["FlattenLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "7"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 1250\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], 
                    Annotation[#, {"Nodes", "7"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"8\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "8"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["LinearLayer", 
                    RGBColor[0.66, 0, 0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "8"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 500\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], 
                    Annotation[#, {"Nodes", "8"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"9\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "9"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["Ramp", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "9"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 500\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], 
                    Annotation[#, {"Nodes", "9"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"10\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "10"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["LinearLayer", 
                    RGBColor[0.66, 0, 0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "10"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox["\"(\[VeryThinSpace]size: 10\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], 
                    Annotation[#, {"Nodes", "10"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"11\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "11"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["SoftmaxLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "11"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox["\"(\[VeryThinSpace]size: 10\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], 
                    Annotation[#, {"Nodes", "11"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    "\"\"", Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"Output\"", 
                    Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"class\"", 
                    Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1.1}}}], "Grid"], 
                    EventHandlerTag[{"MouseClicked" :> If[
                    ListQ[
                    NeuralNetworks`Private`NetChain`part = MouseAnnotation[]],
                     If[NeuralNetworks`Private`NetChain`opart === 
                    NeuralNetworks`Private`NetChain`part, 
                    NeuralNetworks`Private`NetChain`selected = Null; 
                    NeuralNetworks`Private`NetChain`opart = Null, 
                    NeuralNetworks`Private`NetChain`selected = 
                    Part[NeuralNetworks`Private`NetChain`assoc3, 
                    Apply[Sequence, NeuralNetworks`Private`NetChain`part]]; 
                    NeuralNetworks`Private`NetChain`opart = 
                    NeuralNetworks`Private`NetChain`part; Null]; Null], 
                    Method -> "Preemptive", PassEventsDown -> Automatic, 
                    PassEventsUp -> True}]]}, 
                    NeuralNetworks`FormatSelectedParameterChain[
                    NeuralNetworks`Private`NetChain`selected, 
                    NeuralNetworks`Private`NetChain`part, <||>, {}]}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridFrameMargins -> {{0, 0}, {0, 0}}], 
                   TrackedSymbols :> {
                    NeuralNetworks`Private`NetChain`selected}], 
                  Initialization :> {NetChain}]}}, BaselinePosition -> 
               Automatic, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open], ImageSize -> Automatic], BaselinePosition -> 
        Baseline, 
        BaseStyle -> {
         ShowStringCharacters -> False, NumberMarks -> False, PrintPrecision -> 
          3, ShowSyntaxStyles -> False}]], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("NetChain[<>]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.893595439283141*^9},
 CellLabel->"Out[18]=",ExpressionUUID->"f2d08419-daf1-4a87-941e-2ebf464e1590"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"trained", "=", 
  RowBox[{"NetTrain", "[", 
   RowBox[{"lenet", ",", "trainingData", ",", 
    RowBox[{"MaxTrainingRounds", "->", "4"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.893595454400394*^9, 3.893595454400394*^9}},
 CellLabel->"In[19]:=",ExpressionUUID->"2b3cab09-31dc-4dd0-a25d-ebf7ecd61cdd"],

Cell[BoxData[
 TagBox[
  TemplateBox[{
    RowBox[{
      StyleBox[
       TagBox["NetChain", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open = False}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"]], 
                ButtonFunction :> (Typeset`open = True), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              StyleBox[
               GraphicsBox[{
                 Thickness[0.014925373134328358`], {
                  RGBColor[0.729, 0.729, 0.729], 
                  Thickness[0.018686567164179105`], 
                  Opacity[1.], 
                  JoinForm[{"Miter", 10.}], 
                  
                  JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 91.5}}}, 
                   CurveClosed -> {0}]}, {
                  RGBColor[0.729, 0.729, 0.729], 
                  Thickness[0.018686567164179105`], 
                  Opacity[1.], 
                  JoinForm[{"Miter", 10.}], 
                  
                  JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 91.5}}}, 
                   CurveClosed -> {0}]}, {
                  FaceForm[{
                    RGBColor[0.631, 0.8160000000000001, 0.498], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5,
                    103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 79.5}}}]}, {
                  FaceForm[{
                    RGBColor[0.40800000000000003`, 0.627, 0.196], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                   15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                   103.}, {23., 103.}}}]}, {
                  FaceForm[{
                    RGBColor[0.38, 0.753, 0.89], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{29.5,
                    103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 79.5}}}]}, {
                  FaceForm[{
                    RGBColor[0.24300000000000002`, 0.608, 0.71], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                   29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                   103.}, {37., 103.}}}]}, {
                  FaceForm[{
                    RGBColor[0.584, 0.51, 0.8390000000000001], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{43.5,
                    103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 79.5}}}]}, {
                  FaceForm[{
                    RGBColor[0.4, 0.396, 0.659], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                   43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                   103.}, {51., 103.}}}]}, {
                  FaceForm[{
                    RGBColor[0.549, 0.549, 0.549], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{28., 91.5}, {
                   25., 95.}, {25., 88.}}}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{42., 91.5}, {
                   39., 95.}, {39., 88.}}}]}}, ImageMargins -> 0, 
                ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
               CacheGraphics -> False], 
              GridBox[{{
                 StyleBox[
                  TemplateBox[{
                    TemplateBox[{"\[ThinSpace]", "\" \"", 
                    StyleBox["\"Input\"", 
                    GrayLevel[0], StripOnInput -> False], "\"port\""}, 
                    "RowWithSeparators"], "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox["\"image\"", "SummaryItem"]}, {
                 StyleBox[
                  TemplateBox[{
                    TemplateBox[{"\[ThinSpace]", "\" \"", 
                    StyleBox["\"Output\"", 
                    GrayLevel[0], StripOnInput -> False], "\"port\""}, 
                    "RowWithSeparators"], "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox["\"class\"", "SummaryItem"]}}, BaselinePosition -> 
               Automatic, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, BaselinePosition -> {1, 3}],
           True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"]], 
                ButtonFunction :> (Typeset`open = False), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              StyleBox[
               GraphicsBox[{
                 Thickness[0.014925373134328358`], {
                  RGBColor[0.729, 0.729, 0.729], 
                  Thickness[0.018686567164179105`], 
                  Opacity[1.], 
                  JoinForm[{"Miter", 10.}], 
                  
                  JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 91.5}}}, 
                   CurveClosed -> {0}]}, {
                  RGBColor[0.729, 0.729, 0.729], 
                  Thickness[0.018686567164179105`], 
                  Opacity[1.], 
                  JoinForm[{"Miter", 10.}], 
                  
                  JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 91.5}}}, 
                   CurveClosed -> {0}]}, {
                  FaceForm[{
                    RGBColor[0.631, 0.8160000000000001, 0.498], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5,
                    103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 79.5}}}]}, {
                  FaceForm[{
                    RGBColor[0.40800000000000003`, 0.627, 0.196], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                   15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                   103.}, {23., 103.}}}]}, {
                  FaceForm[{
                    RGBColor[0.38, 0.753, 0.89], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{29.5,
                    103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 79.5}}}]}, {
                  FaceForm[{
                    RGBColor[0.24300000000000002`, 0.608, 0.71], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                   29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                   103.}, {37., 103.}}}]}, {
                  FaceForm[{
                    RGBColor[0.584, 0.51, 0.8390000000000001], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{43.5,
                    103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 79.5}}}]}, {
                  FaceForm[{
                    RGBColor[0.4, 0.396, 0.659], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                   43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                   103.}, {51., 103.}}}]}, {
                  FaceForm[{
                    RGBColor[0.549, 0.549, 0.549], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{28., 91.5}, {
                   25., 95.}, {25., 88.}}}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{42., 91.5}, {
                   39., 95.}, {39., 88.}}}]}}, ImageMargins -> 0, 
                ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
               CacheGraphics -> False], 
              GridBox[{{
                 
                 DynamicModuleBox[{
                  NeuralNetworks`Private`NetChain`assoc3 = <|
                    "Type" -> "Chain", 
                    "Nodes" -> <|
                    "1" -> <|
                    "Type" -> "Convolution", 
                    "Arrays" -> <|
                    "Weights" -> 
                    NeuralNetworks`Private`DummyArray[{20, 3, 5, 5}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{20}]|>, 
                    "Parameters" -> <|
                    "OutputChannels" -> 20, "KernelSize" -> {5, 5}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{0, 0}, {0, 0}}, 
                    "Dilation" -> {1, 1}, "ChannelGroups" -> 1, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$InputChannels" -> 3, "$InputSize" -> {32, 32}, 
                    "$OutputSize" -> {28, 28}, "$WeightsInputChannels" -> 3|>,
                     "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{3, 32, 32}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{20, 28, 28}, 
                    NeuralNetworks`RealT]|>|>, 
                    "2" -> <|
                    "Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {20, 28, 28}|>, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{20, 28, 28}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{20, 28, 28}, 
                    NeuralNetworks`RealT]|>|>, 
                    "3" -> <|
                    "Type" -> "Pooling", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "KernelSize" -> {2, 2}, "Stride" -> {2, 2}, 
                    "PaddingSize" -> {{0, 0}, {0, 0}}, "Function" -> Max, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$Channels" -> 20, "$InputSize" -> {28, 28}, 
                    "$OutputSize" -> {14, 14}, "$MXPoolingConvention" -> 
                    "valid", "$MXGlobalPool" -> False, "$IgnorePadding" -> 
                    False, "$InputType" -> 
                    NeuralNetworks`TensorT[{}, NeuralNetworks`RealT], 
                    "$OutputType" -> 
                    NeuralNetworks`TensorT[{}, NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{20, 28, 28}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{20, 14, 14}, 
                    NeuralNetworks`RealT]|>|>, 
                    "4" -> <|
                    "Type" -> "Convolution", 
                    "Arrays" -> <|
                    "Weights" -> 
                    NeuralNetworks`Private`DummyArray[{50, 20, 5, 5}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{50}]|>, 
                    "Parameters" -> <|
                    "OutputChannels" -> 50, "KernelSize" -> {5, 5}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{0, 0}, {0, 0}}, 
                    "Dilation" -> {1, 1}, "ChannelGroups" -> 1, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$InputChannels" -> 20, "$InputSize" -> {14, 14}, 
                    "$OutputSize" -> {10, 10}, "$WeightsInputChannels" -> 
                    20|>, "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{20, 14, 14}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{50, 10, 10}, 
                    NeuralNetworks`RealT]|>|>, 
                    "5" -> <|
                    "Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {50, 10, 10}|>, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{50, 10, 10}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{50, 10, 10}, 
                    NeuralNetworks`RealT]|>|>, 
                    "6" -> <|
                    "Type" -> "Pooling", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "KernelSize" -> {2, 2}, "Stride" -> {2, 2}, 
                    "PaddingSize" -> {{0, 0}, {0, 0}}, "Function" -> Max, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$Channels" -> 50, "$InputSize" -> {10, 10}, 
                    "$OutputSize" -> {5, 5}, "$MXPoolingConvention" -> 
                    "valid", "$MXGlobalPool" -> False, "$IgnorePadding" -> 
                    False, "$InputType" -> 
                    NeuralNetworks`TensorT[{}, NeuralNetworks`RealT], 
                    "$OutputType" -> 
                    NeuralNetworks`TensorT[{}, NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{50, 10, 10}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{50, 5, 5}, 
                    NeuralNetworks`RealT]|>|>, 
                    "7" -> <|
                    "Type" -> "Flatten", "Arrays" -> <||>, 
                    "Parameters" -> <|"Level" -> DirectedInfinity[1]|>, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{50, 5, 5}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{1250}, NeuralNetworks`RealT]|>|>, 
                    "8" -> <|
                    "Type" -> "Linear", 
                    "Arrays" -> <|
                    "Weights" -> 
                    NeuralNetworks`Private`DummyArray[{500, 1250}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{500}]|>, 
                    "Parameters" -> <|
                    "OutputDimensions" -> {500}, "$OutputSize" -> 500, 
                    "$InputSize" -> 1250, "$InputDimensions" -> {1250}|>, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{1250}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{500}, NeuralNetworks`RealT]|>|>, 
                    "9" -> <|
                    "Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {500}|>, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{500}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{500}, NeuralNetworks`RealT]|>|>, 
                    "10" -> <|
                    "Type" -> "Linear", 
                    "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{10, 500}],
                     "Biases" -> NeuralNetworks`Private`DummyArray[{10}]|>, 
                    "Parameters" -> <|
                    "OutputDimensions" -> {10}, "$OutputSize" -> 10, 
                    "$InputSize" -> 500, "$InputDimensions" -> {500}|>, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{500}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{10}, NeuralNetworks`RealT]|>|>, 
                    "11" -> <|
                    "Type" -> "Softmax", "Arrays" -> <||>, 
                    "Parameters" -> <|"Level" -> -1|>, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{10}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{10}, NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "7", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "6", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "8", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "7", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "9", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "8", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "10", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "9", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "11", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "10", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "11", "Outputs", "Output"]}, 
                    "Inputs" -> <|
                    "Input" -> <|
                    "Form" -> NeuralNetworks`TensorT[{3, 32, 32}, 
                    NeuralNetworks`RealT], "Type" -> "Image", "ImageSize" -> 
                    NeuralNetworks`ValidatedParameter[{32, 32}], "ColorSpace" -> 
                    "RGB", "ColorChannels" -> 3, "Interleaving" -> False, 
                    "MeanImage" -> None, "VarianceImage" -> None, 
                    "DataTransposed" -> False, "Method" -> "Stretch", 
                    "Resampling" -> 
                    NeuralNetworks`ValidatedParameter[Automatic], "Padding" -> 
                    GrayLevel[0], "Alignment" -> Center, "$Version" -> 
                    "13.2.1"|>|>, 
                    "Outputs" -> <|
                    "Output" -> <|
                    "Form" -> NeuralNetworks`TensorT[{10}, 
                    NeuralNetworks`RealT], "Type" -> "Class", "Labels" -> 
                    Tooltip[{"\"airplane\"", "\"automobile\"", 
                    Skeleton[7], "\"truck\""}, {
                    "airplane", "automobile", "bird", "cat", "deer", "dog", 
                    "frog", "horse", "ship", "truck"}], "InputDepth" -> 1, 
                    "Multilabel" -> False, "Dimensions" -> 10, "$Rank" -> 0, 
                    "$Version" -> "13.2.1"|>|>|>, 
                   NeuralNetworks`Private`NetChain`opart, 
                   NeuralNetworks`Private`NetChain`part, 
                   NeuralNetworks`Private`NetChain`selected = Null}, 
                  DynamicBox[
                   GridBox[{{
                    TagBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    TagBox[
                    "\"\"", Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"Input\"", 
                    Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TagBox[
                    GridBox[{{"\"image\""}, {
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"array\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 3\[Times]32\[Times]32\
\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    BaselinePosition -> 2, DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"1\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["ConvolutionLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"array\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 20\[Times]28\[Times]28\
\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], 
                    Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"2\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["Ramp", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"array\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 20\[Times]28\[Times]28\
\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], 
                    Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"3\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["PoolingLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"array\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 20\[Times]14\[Times]14\
\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], 
                    Annotation[#, {"Nodes", "3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"4\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "4"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["ConvolutionLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "4"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"array\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 50\[Times]10\[Times]10\
\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], 
                    Annotation[#, {"Nodes", "4"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"5\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "5"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["Ramp", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "5"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"array\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 50\[Times]10\[Times]10\
\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], 
                    Annotation[#, {"Nodes", "5"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"6\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "6"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["PoolingLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "6"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"array\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 50\[Times]5\[Times]5\
\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], 
                    Annotation[#, {"Nodes", "6"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"7\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "7"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["FlattenLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "7"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 1250\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], 
                    Annotation[#, {"Nodes", "7"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"8\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "8"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["LinearLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "8"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 500\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], 
                    Annotation[#, {"Nodes", "8"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"9\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "9"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["Ramp", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "9"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 500\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], 
                    Annotation[#, {"Nodes", "9"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"10\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "10"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["LinearLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "10"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox["\"(\[VeryThinSpace]size: 10\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], 
                    Annotation[#, {"Nodes", "10"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"11\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "11"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["SoftmaxLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "11"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox["\"(\[VeryThinSpace]size: 10\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], 
                    Annotation[#, {"Nodes", "11"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    "\"\"", Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"Output\"", 
                    Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"class\"", 
                    Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1.1}}}], "Grid"], 
                    EventHandlerTag[{"MouseClicked" :> If[
                    ListQ[
                    NeuralNetworks`Private`NetChain`part = MouseAnnotation[]],
                     If[NeuralNetworks`Private`NetChain`opart === 
                    NeuralNetworks`Private`NetChain`part, 
                    NeuralNetworks`Private`NetChain`selected = Null; 
                    NeuralNetworks`Private`NetChain`opart = Null, 
                    NeuralNetworks`Private`NetChain`selected = 
                    Part[NeuralNetworks`Private`NetChain`assoc3, 
                    Apply[Sequence, NeuralNetworks`Private`NetChain`part]]; 
                    NeuralNetworks`Private`NetChain`opart = 
                    NeuralNetworks`Private`NetChain`part; Null]; Null], 
                    Method -> "Preemptive", PassEventsDown -> Automatic, 
                    PassEventsUp -> True}]]}, 
                    NeuralNetworks`FormatSelectedParameterChain[
                    NeuralNetworks`Private`NetChain`selected, 
                    NeuralNetworks`Private`NetChain`part, <||>, {}]}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridFrameMargins -> {{0, 0}, {0, 0}}], 
                   TrackedSymbols :> {
                    NeuralNetworks`Private`NetChain`selected}], 
                  Initialization :> {NetChain}]}}, BaselinePosition -> 
               Automatic, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open], ImageSize -> Automatic], BaselinePosition -> 
        Baseline, 
        BaseStyle -> {
         ShowStringCharacters -> False, NumberMarks -> False, PrintPrecision -> 
          3, ShowSyntaxStyles -> False}]], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("NetChain[<>]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.8935956620623503`*^9},
 CellLabel->"Out[19]=",ExpressionUUID->"d5c971aa-27d1-4843-8b71-cdae05197db2"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"trained", "[", 
  RowBox[{"{", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJylkglQU1kWhruma1qrHRQhiLIIKCKyiQKKSlS2gIiEAMoi+2ID4sYiChbt
LqiIYqugKKDYYiubrIEIhMgWQkKWlxVM2EkAQUhIINtcwJpyqnqmempO/e/k
5VXd7/z3v9cg/IzXib/98MMPCStB8wpLto+PD7vorQr+HD2dEPPL6ajIQ6cT
o36JircN/xF81P/2LL53f3hDrCym1JVAjRWc1rr+rsaRHtwYtX2cQfjaRxH1
0+eH2bLRPtlY3wK/b2GcKxXwZAKelM9dGO0T8znicY6EzxYO0ma5lJle8iSz
exzCj0NdfCB61xitE/BJVW9p6FJ64wfAHyA0jZJxfFoH4H9hk2a5NPEAQzrE
ko/1ycY/Syd5oMsES++CXsnEosRjLNEgJOqnCT9Tp9mkKRYRaHJJANJd8Tvg
Q/Vly3zgf5jUAvzzgQ0GYYrTA0bM9zMkg8xF/xPchYk+6eSiFgB5nCPks4TD
kHCAKuLRRFzabB8FjJjm9Ez3koGAQ+C/p/od1FC+zOd2Yga7m0fIrWBrAnrX
BLMbpDT3mSbk0oSDDNEoa07AlEwwJZMsIKGA+XUYmhmkAb6QRwX+gWZ6e0BQ
M5+pYCEYAcxTat8zMBX0pj/hgy1Mc8iAL+IBk/TZYYZwDBKNQ3PjdNBn+PTp
IdrXAeosjzLL/cYHW5gFHeyFSwNTSDXvyIvhV9KbKpf5Q0Qsn9I6AY4Awgug
rik2eaGfPsvpGV0c2v6FQxJyqfMjDPEXtmiSLZngzI2xxSPs2SHmFI8GyIA5
xaNM91NnBugiLkRCl5IbyqGmKga2GvB5+I+AL6C2TUEdE3T8OJP49TPEp3RQ
MRVtZUUNr3IbCp5/Kv6dWFXKJTRPcyl8JoHV3jhEIUzzGHOjbNkwSzrKEk+w
RXzWzDBTNMAg15dRP36gN1ezcLW9bejl+ymgtU/QO/mMrjFWD6sL115b0kto
EbB76K2YyhfPinN/+/3B7aLzSUWXUmM9PfzhB1KDo16l3/lYlI8vK+5Bl9Db
agQsomSYNTfCAuYBn4Gt4bSil8MZJX8SQB0COn6I0knBYTBlf0B43GgvJOAx
x3rB0qqMtJT7F5MKw2Pi9znbqOvu0dh0UMcMaWl/3AkV4+X/a2xs3s2rdY+y
hpurpSN0CqaC1ljJwALz9cA84AP/XyD8NIOEeV1Q+vQJq6ONB1HARYDwHa3o
2jdPck4HBEYedHyIOn4Ipr/tJ5j1av3tK3VM/2FoDDOzM95z+cS5gouXX4QG
UbOuiTvrgHnAZ7bU9raiQfjg8vNp7V+ZRHZD3YPExMKb6YQaAP2jMPu3m8kX
z4ZHBrt7um+xOLPL4TrymPkKFXMVTbNVWmardIxX6liobjpmBX8UEvlHWFR3
ctLU/Wvsq2ep6AoIU0kH/tvr+zsx/WBKYzWvurz2xo17ISF3gkKS3D3CXQ9H
unuGuyFDXI5429ghtY3yAmOSD3sizCx3amy0VtNx0TONsoE/DQ1rTjnPSk0a
TDo9khTXG+TViXKk1lQw0JVsbB21srg1L7s561Zr+jVS+k367XTanVuEq5fq
zsYWRv3yOCg0yz840R4RtMXk6n6XNxEng4xNYw44JTi5ZaGOVkXHdp9P+Jya
yI2JgFBuJMfdXfZWBDcEK9iXWFfOwHxoz3tUEhP9ISIMHRv1KTG2J+UsMy2p
99algd9uTTzLVrzIF+bmDN+73ZWSgA4P46SkfQqLyndwIiaeYyaeYp8Mo/gf
xiHs6nftarSwwJqZEuG2nSjPN84unJMnSA1lFQ+uP3B1emXv2IDyavX2xPsh
SSFe9BMBQ+fj+DcvDd+9MpR+cSQjWXA7afxW/OyV5LnzSQMBASRHR+IBW6yZ
AXrLOvQWVbSJbpOVDWm/fR/Ksz887O4eZxcV2BtXx5YXjzI8EJnbthbZ2ryz
tUFbWmJ3WLY72EFHkYMBfpyj3t2+SFqc/8DZkMGwoxwPRCfcGmu2tdlAD6On
g9HXxZkY4Xdtpzja0lEurOO+vSGBnOgIbMjxZCdUNAJ1125fQWjwXVOTx/q6
eZu0ivS0S3UN3hsZF+zY/srGutrEAm+zi+PpxnRzwlntfL9x88t1uu82alXp
bcBuMyTstSa7ODJRSLbfUdZxP3qoPyXcnxIWSDl54iXSrSDtavOr9zk+vg/h
9llr1uWugxXBVpeuVs1X08y0MH/o45HtYF9pu4/pimixNH6vqZmhDvP/WcV9
jdpjk609Lg60I65UXyQ5AEUP9mWGB9LDghgRgcyIAFZEMOtkTMFhl6qc+8yG
pqrL1zL32j1S0y6EaZWsVa9UUStar5tjb/fp6gV8dGSbvUOVnt5bDdV8A/1j
sA27VXVMVTRDNm5u8zxC90YR/bwpQT6MED9m0DFGgA/T14OFcmJ4IaiRQcXB
gXwykfEJh6+rTt60OX21+nMNzZcwWKn6+hqdzTU7rZuOuDbs31NruLnBcFOb
7c5cC/MkV2TuxdvhDkiPdbpoF3uurzd0zLvHw6HTeW+rgy3uoG2rE7zjkAPR
5wguIuxJUCi+urq5soJMaE8xNkldsfK55trMDWo3VNfkq2uU6mpXm29tg+/G
W23H7zZvhG/PtLV5cC6BjSMU3roXarSt3gVOR7pi4fvaD1h3udh1HkFg3d0+
uLrl2dk/sXO4BkcE7rTLvnzldW5Ofy8z29/niqZmgbr6fc0N8StW3VNb+1Jf
87n2WrSpIc7UkGxv1XxoT7aX56OrvxIxjQ9S0xL3H6xwgXciD2EcnRvd3d4h
XDN27I7VNfGF6Xlr6h833Bm8y9kH7nrh1BlMdbVUIn57Ky3Pw+OBruET2JZc
daOX2ltKjU0K9bTLTQxxO8w69+8sO2jVcDdzhAPNDHDLnz5LRHg8Qzg+PWif
YGAcDNM+tEbLdYORl8X+OA/fh8mpdYXve5rxDBL1M5sjEc0pFcrCyyk50dGp
cMc4XaMYNa2EdTrXdA0eGhm9tTRH77Bs2mOdY7G1JCOzC4vhEdp60OgAK8cA
LX3U+o0eeubRcMT1qJOv7z1sqa7lMWjCLwKpRCqXyRWKBaVSqQC/csWjxIQL
vn6hdgcRBoa716jvXaXq8LOqh4pG8FqdOM3NiXrbgtfrn/P0y7yQWvu8oOD6
bXcT21PO7o8vpKFfl7DxxOnRMalIpJRKlIp5hUIqlwMkaAsKxSIc+H+blXn3
VNxZ9yMBVntd9U3sYBttVDS3/7zeeIXW1p82GP19veGPGuZrNpzy9E8Lj4tD
+tU9fyVg9cqFQqVSrlyqRSZ4FArlnxUDW9dRXlyfn/P2TkZ2fOKlwODTSM8o
V/dIN6/TPkGXwk9ejo1PiTlzIyn14bWM1tqPilmxUiZXyqRS2YJMLlP+B+y/
appHHud0j7MJYxBhmITv62hhtGCgT82srq4hBn1qaFA0OSmc+iqcmpkXSZQy
BRBIGASxAAL+7+ilkk4PiKd4kq8D89PD8plx5dyUUjylnJ9VysRK+VKq8nnF
Uqzf+lIuMrAQnOBf4CslX2TzkzL5tEIGjkmsWBArpBK5fF4mX5ArpIpF0r9h
5EtS/EX44gKxXCaSyefAoS8f1XKk8u9Q39f/QF4ucGXFQtm8SCZbkH9Xsu/0
/9Q/Aart9CQ=
       "], {{0, 32}, {32, 0}}, {0, 255},
       ColorFunction->RGBColor],
      BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSizeRaw->{32, 32},
     PlotRange->{{0, 32}, {0, 32}}], ",", " ", 
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1: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
/RWiBK0ssqHSq5LimxTp6rxlHQ4XUM1hfHP9i4cPbn9z7fLSwjwEokyG8ibk
wLeCj09/JJbIggcHSO2mmA4zqctM6GlNryuL9nd2cn57HaskUiogtKjI7TqK
WZuvkUc3VnlIOKGUNExM0Oa8TOI/T/SfPXPw+ICiv0f1zdefAxarnaYdHIn2
Pzx/brRFqYxtNUS1GxMHenMPdWb1d1Ep2eHbNqx3Wr8uNgIjEWQe6W9UiSlN
Ddnm5jR5o3+nNvpAFTYdtyF5j5eQVSbn5rc2FyrltIPdmke/PIDslPKCfq1X
vjpmNuV3mdNUB2K6jfkHO2hyUQ4R7xni67cnKCQmwp9ZmtZYV0gvTOHQMxtZ
MQp++GBHglbgnxe7juTzbug2p6IErE5KFgsyteq6r69cAtH2gZEXHxj/8Uut
iqKWJbNLAqk5vhW0qESib1jQ+9TCIrPB3GE2tpnUrUZlX5f5/KljpuYqQS3B
0Jyok+Kr8nfuDdse7PRWHgnLr46r52QoZNU3r19D64MqoBccvDw/2dPGE9bF
MQtD/V3/kRSNZdDz6CWU4eHh2dmn8/Pzc3NP5+ZnFxfmAav13t1vDVpuRRmh
lhVVVxqeH+ceuO2NTGJQUW5sXlYUh00f+fDMs2UL9Jv4Ueodv3W5SZgvqklN
iNiJD8KcONZ3+/a/n87NQgjkKCQ6WWhDW9HegJBbt27qWqTM8sxyKpFFiYrb
7UzEB6WRk1Uy/sipkyeGT01MTK3JqucEBgLLIx8dPdgpVEoKCnKCDRrWzasj
K89+RdUgaBdPCLpeUMoGV1UUAACTkxNjY5+0mtRcDiM3K7mwYJ/ZbP7p3rjV
YnkyM7u0tPxcljjCX52MmZnHH314qN1cIxbsNaipcl7e0KDm4cQPsF1E2b3Q
MOw5w3aphl5RRTozM3Pp0uW+vr7R0dHp6WmHjkXW7KWsQiFAu8p7cP/W2TO9
TTKqmJ/dUE0uKozsH9IuLj1+jvwbc8hh9MZqtc7NzaFbMWhPDnbo5BdfeUVi
oR+CgOmp8YFDyuyMYAaNJBYXagw1N7+97FCn/1PyOer8O7RX7IWototw69LN
6xfLS9LTE8OrqrJULbVnR08sLs6jcaJlfynj/z9Dwf8DjJrXkg==
       "], {{0, 32}, {32, 0}}, {0, 255},
       ColorFunction->RGBColor],
      BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSizeRaw->{32, 32},
     PlotRange->{{0, 32}, {0, 32}}], ",", " ", 
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1: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
o9HSMumMLYy3sjbveHfbpi2Zuw9kt7fJYe2o32qIus2k15ycwxcDWCpoWY3Y
1+KeCKrxm5QOcFI19O2NG5fbLrSVn6wXtcobP26+e+tzcLzHMNlHaPox1UCt
TMRhH8zNO/C7Nzbt3btr+ztvb9m2tUCYrxi9G7DOBBB1AFUF8OmwDUi44KQP
XQoSK1GXA1ZoprpvfnO1qfPk4fZjsvajkvajxW3Npa2N9aeaTl4+efoPp25/
dQWe6lX2XQfH/jz87RdtR6vv3L5RWiHhy4rO//H8V3euTYzcdUBTIXwmYgOo
w4k7oXmPKRmwLoWdXTcvN59vLT/RUHKiqbiDMjeUtNRLjtdLWuSyjoaKU42l
rTWVrXWfdp1RK74xq78zTH430HvjYtc5+cct9Z3tTedPNp/rOPPZmZvfXNOp
hnB40oEq4y54yYss+4mVsKe0tU7S0SBqr+c313CPVglb6opajhS3yEta5eLW
ellHo7TtSHHbEVlb7fHTjWcvnTh94YT842ZZO1W6qfqTtppzp+QXTzf+4czx
K5+cv3bx6q3Pb969NqnsMxunbKjabddvP7Rzt+Cj3UV5O7kH32Pt/72Yl1dW
xK2TFdTJ2NUSXq00V1qYWynmHpGKGktLj5eJj5eL26qLqb+isaLsRENlZ2vV
+ZO1n55p+OyT5iudrVc6O66ea/n01OWvu/7UffPb4e483q6DnOwDrA/2/v69
nTnbdua8s+/Q+4cK9n7E278vL/tAXvZ7u97atmtb1r6sd/dnZR/c9f6HO/fn
f7jnYHaVXCys4BbVCOs+bqg5UX+4tbrmZF1ZU5mwSpgv41SfqC0/XnHsYktD
44d1dfuqqnIqKnJk0l0SyQdSaXapeJdUspvKEtH7JaIPCgU7Obz3uNwd+ezt
bG5WAW8HtyDrWBNfVn6gqGSPvFlQJWdX1eYeOcqRN7KlZXvEZTkVdbkVcnZF
Q4GoNF1QnM4XpvFEDG4RnSei80VMoXCTUPAKYaZQ9FpR0dZCwZZCwRsC4eu8
ks188RvCki1FxVtLxNtKS3dIyrNkh7dXV2ZVVW+vq8uqP7JDfuTdhobsjhMf
njp9qKycKZYwRCK6oCiDL2Bw+TReIZ3Hp3O56QUUBek8Do3LphWw0tl5aSxW
ei6blstOz89nFOQzuQUZAn4mX5ghKM4QipgCEV1UQqdspVJmWUVmdV1GdUNm
aTGzuJAp5DL5BUweh8HNp1NwKAMrjYKdl87Kpf9Gbh7tECv9Nz5ipeexaWwO
LZ9L5/LofB5dKKSLRIySErpEwpDKGLIyenklraJuk1TIFPMzijhMIZspYDMK
WYyNZKfzWWlU8lg0DouRn8fIZzHycmkf5dHz2IxcFp3FpnEKaDw+g1/IKCpk
iAsZ0iJmWQmzXMw4LGVWlTEry+jVlZuqa35XJ8usLNlULswo52WWczOl+Uwp
hynhMCT5dGlBhpTDkObTS9k0CYsmZtFFucwSVoaYvamUk1HGZRwWZFSJNtUU
Z8olrzXIXm8se/3o4deaa95oqdvcKt/S3vBWx9G3/g145Pw2
       "], {{0, 32}, {32, 0}}, {0, 255},
       ColorFunction->RGBColor],
      BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSizeRaw->{32, 32},
     PlotRange->{{0, 32}, {0, 32}}], ",", " ", 
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJyllnlMVEcYwE37T/8xaZr0SIxWghgjlBKbttQWKdUieBAB8eCSJd4cBtAi
SMDaUkWstVHEArZQaMGjtlJARVkFFBSoRcFlUTTh3MXl2N333pxvod9DsEtq
ccHJ7OTtezO/75vvmrEL3+G3+aVp06bFvQKDnyreIzZWleD/KvwJiI7btiV6
00bv6J2btmyKdQ1/GV7OHv0pz5RSSZIQNBgkIkl0rBMBC2ZkNiMkICogpkyS
lLnSZJrFYqH/NjbWOSEwSEyWGIcnRgijU2qyLJPxDWMMcinFg/1dWk1Dq6bR
PNjHCYYPZPJtPB/YCEZZ5j3dHYfTkgN8PHyXeeRlHePITMmL8jEWKZO6u9tr
aqtTUhLed5493+41u7emuy2YX1VewhnFk9+CFZ8igjmT2tq0ufl5fr7Lnee8
4ThruqPd6/Pt3owOX6vvaaeKCIoJtV3MUz6sEsAb2EywqB8wpR9I9fzYyd1l
hovj7K1bVEGr3EuKC2QLR4gjIiObJVjx2QhfIFhCfKjqSmnIyoV+n84LCfYv
U1eEBq5MSYpgFL4yRDiiU9FffMIHP8hDXS11x2J8ftuvenD78vXaytU+7qtX
LGysU1u44gRQZgp8iXKORXhAlOsby8u/cL211+1WXsKeiAB/97lL3pu5OzJI
367hDEQA36Y9WPMRYRyMA7pRqq8tup/kqImbcWy9fehnc4I97Ncscli92Ck/
64Bo7seYT4EPnREoEpxSYqwrHDy4oG+fQ3aoQ7i3U7zKa/sq10BPp4gw77u3
a2U+bGOoWvEJYkgZicyY2Nd8rj9niXTcpTLJOXalfVzo8sStvoeSVPER/rkn
0kfcJEoEIaV0wIbRc/mgvsQFCeZjC2fm/u7Kx2WhUpFrX96HZ3c7b1w2d/O6
Twqzkr//entEiFdLw2VGBwUiilxZDl77v+y2yi+MmIjA9MSixKGoETTp+HqI
+YL3/dNex3e7BHrNjAh0jQ52C/Z2St+j6u3SQJwKlI7wJWIDHyJoxGtQMUXG
dLj/mtSaIdXvNNZuay5Vpe5wW7f47aDP54YunRe24p0rxbkYDYhKyYIFNthH
QT/JS4opwkyQUK+x86bYeprczxEeZDZdPXI0eUOw57v+i+zXLrbPTNvZp3uI
sIQnTAZrPoeZSlhgRCHXIAuY0aB72Hit416J7lGxsaOirf7C4T2x6zw/WPbR
rJgwr+YGNVbyZaLSPY4PeTXKZ5DLsAuCBG3TX2Wlv1y49KO6LEf9R2FBRmZC
5OaApe/5uDkc3BujbbkjiFCy0Ij5n5ER4+yDR2couQAHDEGiqR8NGjraWmuq
r54/nZdx6JuC7BPFpwqKcjOO7I+PjQhO/XLXrRvl5kG9IgFDEI0BnsW3bk/U
Meg6ux5omMnMBPxIey8747v6G1eR0WDu79F1ttRUluxNjIqLCisq+KGvT0eh
8v3H0RPwKWOm/t5z+Se1f9cjk7FKfTn/p+zmxoYhKFSSkeEB0aRvbqw9cuir
0GDfo8dT2zs1YNeR1cwWPgiQiZiXefjXkxnV6ksXS4vLSop7ujpkBpaDQm2C
zoh5oE939szPQaHeKfti9L3tjDElwp/PB/uz4SGmLjm1K3JDxcXf6+tqa2pq
KH0qH6IMrixQKOCOIdXcvJSWnqzV3uWcUxv0H/E2H7bQ8vMFIQFLzhRmVV5T
P35sUN6Peo8+7UqOUWQ0DQiCGRSglNrAB1fh4SFa/mfReh/31KSoe013KNTv
0SijY+FGR19CwNHRom2Fn4APWSAyC22+27BDFfBt4naDrouyCTKVPjPJJtQf
DltuMOhSEyPjVD51NdWcy5O9okxkfywjYhGROTcrLTFqzY2qign1nywfGpeI
TDhraqy+eC5H1w33H2btuxfjKxEIxw0EnygOiANdGIk2nrm28qkJTkyBcgTB
IQlKESOTviL+A/g9nZk=
       "], {{0, 32}, {32, 0}}, {0, 255},
       ColorFunction->RGBColor],
      BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSizeRaw->{32, 32},
     PlotRange->{{0, 32}, {0, 32}}], ",", " ", 
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1: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
QU0h4T8URME1ZQV5Thue4ODm0DWFRN0ODIx0jU8K35pp2JyqXRkvXRwrWBzN
WxrJW3yR834wpyrBJcBAVl1UwMRIT1NdSYybXVVK5NQJDRVZeQt9QzkRfk0l
CTCcnOxsgjw8qmKiElxsUiKCjucsuXjZrc+ZDwyUvRyqnproWwSdGcxbHM6b
G8p4//zO+4HUqf5UeGFAQYB+rodWbpTLcGduY0mSioK0hopcfNila142qfFX
7sIul+dHXvayYmPhkZeV8nc/Azovws9vYWbMw8vueN786cCDV8NVC+/+Whgr
mhvK+TB4b+ZZymRv3Otu2LNmWJCrbuAZuY4Mj4m+zJfdNyd7M4yNtQ30NZ80
Jg40xA603h7sTBnsvFVWeFVcSFpGWiI1yc3BUpeXg42Pl1dG6ljm3ZDHffnP
+wumxrvG+lNe9adM9N560hLxpDV86GE8LMJBT1si6bpdbw30ETxhAH59uPuW
leVJfV2lrtqI5+0xvU2R3XXh/c3Xe9punLM15OZk9/EyuRnrDFETA4/Lyd64
p/Vub/e954/zp151dtZF9DRe76m9VpByNjvFOi/tgrGehJfb6aayq+0Vfu21
QZ3V/vC6MFsr7dMGCi210J5m6KOmsK76sO76iEctkVl/+kiKC53Skk+74xQe
bi0tJ3ze3vjpw4ze7oxnj3PfvIJHhJkGBxkmRlneiTHLTnX0dFX3u6TVWBrS
XnsVXn25rfZyV/2V7oZrFx2M7G3VG8v9Goq8awovNpZ4tJZd6aoJaa4LNzSC
aKpIpic7Fd33d3M3NzPSaqiIb22E9XWlT040hEKNTW3Ej+vxmpyWsLNS0zkl
4u9rcjPGPiXeNu2W3Z8p9rmpDnWFPl7OJld9dRtLL9QUuJfnOpXm2JVk29cV
uVYU+Zubavi6m1QWeRUVXEpMcLUy1y4rDGusieqG3x58XjQ3fr+hOsrZVUdR
QUBBhl9DVUBNhUNBkU1GnkNFg0f9BL+aJp+ZqfQJiLzbpZO59+xKc91rH7g/
yLHNTbfISTsTEWxsZiiTknC2LM8p70+b1GRnKwtIdoZfXXlYW90N0CLEbMXc
SG4yzPWKt0VWkndVXkDGLUdoqKWDo5aJqdQFF21ff3MfvzNqCtKujicjg3Vj
Qg1vxxmlJ5nnpNlXlfheOnci2Ot0Y7l3XZFLRZ5DfpabpZlqxDXr0jy/ysKA
no478yP3pp+ldjbEddbHjnbffNt/a6g9+ll7wkBLYvOD4I6qsIc1kbDrDpes
9WqyQzrKg+uLAwsznRMjjaFXdCKCjM11ZHOTvDvrr8IrfBuK3WpKQ87Z6AT4
WLXWRLZVQh93Zox3xY13xw+3RU8PJL17mjzZCxtsgT5vgo7AY8cewgabox7X
QIuT3WqyfIfbY8d64l8+ShjtuQXGuC7fMy7YPDnKqb44uLbYu6HEvSLfuao4
wMfd7LSBUlNV6EBr1Iv+gqG26yMd0S8exow9ip3oi3/VG/eyK7qvLuhpE3QQ
HvWkMfxFR+x0350X8Oin9UEjbWFPW6F9jWF9TWGtpX7wyqsddaHNFVfg1QEd
dYHN5X7NVdfSk92goTYNtUEd9SGD/fmIz8/W5nq+zHYtz3auzXWv/o1PU22r
7x+tf+j9MtO5Od//benJ5mLfp+mW5fdti2/b5iZapkZq3gxXvx4ufz1S9nqk
cmKoanq06f1E2+xE+/xM3/vpnrdv4NOT8C8L4/8BwYKA+g==
       "], {{0, 32}, {32, 0}}, {0, 255},
       ColorFunction->RGBColor],
      BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSizeRaw->{32, 32},
     PlotRange->{{0, 32}, {0, 32}}]}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.8935954848516245`*^9, 3.8935954848672543`*^9}},
 CellLabel->"In[20]:=",ExpressionUUID->"d2fb8bfb-a271-489c-bc90-45a5853819ba"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"automobile\"\>", ",", "\<\"frog\"\>", ",", "\<\"airplane\"\>", 
   ",", "\<\"bird\"\>", ",", "\<\"horse\"\>"}], "}"}]], "Output",
 CellChangeTimes->{3.8935956730386567`*^9},
 CellLabel->"Out[20]=",ExpressionUUID->"a1920446-dcaa-460f-99e4-416f2b5c5531"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"trained", "[", 
  RowBox[{
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1: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
9lOnTra1tQH+fwAN6ImN
      "], {{0, 32}, {32, 0}}, {0, 255},
      ColorFunction->RGBColor],
     BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{32, 32},
    PlotRange->{{0, 32}, {0, 32}}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"\"\<TopProbabilities\>\"", ",", " ", "3"}], "}"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.893595689520333*^9, 3.893595689520333*^9}},
 CellLabel->"In[21]:=",ExpressionUUID->"76faf2f1-862b-4514-a450-5ce8f9cb18c6"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"\<\"bird\"\>", "\[Rule]", "0.13825160264968872`"}], ",", 
   RowBox[{"\<\"horse\"\>", "\[Rule]", "0.13870960474014282`"}], ",", 
   RowBox[{"\<\"dog\"\>", "\[Rule]", "0.5616759061813354`"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.893595690743044*^9},
 CellLabel->"Out[21]=",ExpressionUUID->"36d06a08-f635-499a-8e07-ac182e900370"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"images", "=", 
   RowBox[{"RandomSample", "[", 
    RowBox[{
     RowBox[{"Keys", "[", "trainingData", "]"}], ",", "5000"}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.893595714973238*^9, 3.893595714973238*^9}},
 CellLabel->"In[22]:=",ExpressionUUID->"ec753439-92e7-4cd3-90e4-6e4c31a3980b"],

Cell[BoxData[
 RowBox[{
  RowBox[{"entropies", "=", 
   RowBox[{"trained", "[", 
    RowBox[{"images", ",", "\"\<Entropy\>\""}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.893595726685588*^9, 3.893595726685588*^9}},
 CellLabel->"In[23]:=",ExpressionUUID->"2ca425ee-a755-4f46-bcbc-089484928921"],

Cell[BoxData[
 RowBox[{
  RowBox[{"entropies", "=", 
   RowBox[{"trained", "[", 
    RowBox[{"images", ",", "\"\<Entropy\>\""}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.8935957320393925`*^9, 3.8935957320393925`*^9}},
 CellLabel->"In[24]:=",ExpressionUUID->"f323ad42-f9d2-48dd-a7d1-5c2aa54e1bf8"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Labeled", "[", 
  RowBox[{
   RowBox[{"images", "[", 
    RowBox[{"[", 
     RowBox[{"Ordering", "[", 
      RowBox[{"entropies", ",", 
       RowBox[{"-", "10"}]}], "]"}], "]"}], "]"}], ",", 
   "\"\<high entropy\>\""}], "]"}], "\n", 
 RowBox[{"Labeled", "[", 
  RowBox[{
   RowBox[{"images", "[", 
    RowBox[{"[", 
     RowBox[{"Ordering", "[", 
      RowBox[{"entropies", ",", "10"}], "]"}], "]"}], "]"}], ",", 
   "\"\<low entropy\>\""}], "]"}]}], "Input",
 CellChangeTimes->{{3.893595737622737*^9, 3.893595737622737*^9}},
 CellLabel->"In[25]:=",ExpressionUUID->"b650b898-5548-4e91-8457-3a88da9dc18d"],

Cell[BoxData[
 TemplateBox[{
   RowBox[{"{", 
     RowBox[{
       GraphicsBox[
        TagBox[
         RasterBox[CompressedData["
1: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
tD3Ysj7Ti4ZCK/aV/S94YMXY
          "], {{0, 32.}, {32., 0}}, {0, 255}, ColorFunction -> RGBColor], 
         BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True], 
         Selectable -> False], DefaultBaseStyle -> "ImageGraphics", 
        ImageSizeRaw -> {32., 32.}, PlotRange -> {{0, 32.}, {0, 32.}}], ",", 
       GraphicsBox[
        TagBox[
         RasterBox[CompressedData["
1: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
1crB0tzJ+urO4uzNauFOu3bRq93trB2v1x52mu+cH7cnp8rhWEC0KaTgsvJD
qNzyxG8HUpuKY1e0P/CE9p2ODadz1uUajXp9YwHHXIrJha2yZMWEzo35F7fW
Xj9qvryz+dLe1sVO7eUHO8+u9p5fHr18e/eyu/20s7VdmK4P5QZ5m50QnIhQ
tPu/Mrd2lZloac4ZjF5Q3TOCM8ZyPr/qygekGR83FUZDLoyXzX/uSW3j7nrt
UXf13s3FN872Xzppv3V18p13n7z/6v1nZ4eP2q07tZX1zHA1OOgnJAVmDUqt
GrF3l9vvFOf3XP5xQvTiskxJWogNLvvdrUFbI6quDnKjfsxh6ifPtncuGp3u
YvXpUefqqPPa+a13n5x969Unz++fPdlpnzfqvcpMWrH5KEHBeNxCeSh7N1b8
cn75MldcVz1DGM8zlCPnSe8n0yfJ8E7C380ajYyt2E8bIiMwrXa3V2sdbay/
dn54ddR77+r+O4/O3rh3+tXH916/c3i8trSQS0c1p5NVBUIzFz0Xa38wtfxw
LF92y+Neo5AemlnKFTqJ1FYquBR3FPvFTIAKuhhVGgiF8pnU1ukLB7tHx82b
L/a2ntzuful0/+nt3lsPzr7xypMvnx0dri/NDmcGPSE77+BJJwRKPpvxYmX2
4XyxNp9cbZXbt7dG5yftCSflU1CHAvKCleAsKEthfMTtGRlL7Nw5O33h7kGr
eXe7cae1dtqov7iz9fig++ige6e90Vksz6SGgppTxUUVd3CwWkjmPnh68fzp
wWxzotAcj05mEMnTh7r6YNECs1ZzY9DHMJzd7w6kBiPjtYnTw6OVlZWlG4Xt
xfKtlcWj9drddvO4WW/MTnVXZ281llcLo4VwJOsMTIVypdDYzenKsy+d1rsV
PRvSM37O7YIpFww7YKtobndhc78KcUFvYDoRr5XzI2ujzbn5tZXl1YVyc658
tL5xp9k6azZOtzYP2/XHx72npwePD3qXvZ1XekdX7eOLeq9bma1WsuGsVwu4
CVFASA6EaRBAEQuFWlkEohhGnMxkdqvlRjXvGfXUq+WNhdpuc2tvY/Nos326
2TlcWX2h23n20sWrdw/Otrfv73cu9/aeHd67f3O/NbcwlclmQ4GxeH8k4JZ4
iSR4FGEhmAFABoZZjuKSkUhzaXl3bq5SzMpJ9z8A1HYpjQ==
          "], {{0, 32.}, {32., 0}}, {0, 255}, ColorFunction -> RGBColor], 
         BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True], 
         Selectable -> False], DefaultBaseStyle -> "ImageGraphics", 
        ImageSizeRaw -> {32., 32.}, PlotRange -> {{0, 32.}, {0, 32.}}], ",", 
       GraphicsBox[
        TagBox[
         RasterBox[CompressedData["
1:eJwtVGlQm+e1zvT+6Z8sjY3BYIzB7FhIaP+0L2jf930XWtGCJJDYd5BYjECA
QYBlBBKLMYuNbYwdb7Hj2IljJ27tNk3TpJPOZNppe2dup9M/nbm6M3fmOWfe
8/54znueec5bavaJbb947733gr/MJbEpTA4ETO2Sj3KFzBt02r1NVpY31GRv
CqDN/5W7PPf/8X9nkAHb6NfGUzv7h8+CC2H7RNDa20H30iktCGKgVBBB9McX
Du+8+urVT6+/+unrlz998eKPT55+m8Mn998c3Hye2jwenkm6uv0ECVprMzgd
IWswIGtrlQV9Io+DadTCTCRpxNk2NDU4NmubsJmGvLaOAUWnmhKsJ/mrAzOe
/TsvP3vx42fPvnv29PefP/n940dv733yTQ5HRy+39x5f2bwbnU1Z27xoHsCQ
CnVWl9ptE3q8Ip87x0/XqQEzyxMdWd64fXljzzpmGc4kbj7+ZvF4hRYBcSLY
3SfHr775y5PP//Do8bsnj3775OG7Rw/f3n/w69tHLw+uP9vcebCSPZpa2rS2
higKjtbTrHG5JHattNnLc9kE7iaGQcN0GVYPP/3623++/eHv/rlQ+sHeDz//
+9LhEtZbqR0RP3r17bOn39198ObO8eu7R6/u3/n6/r03x3df37z1xf7BZ9mr
95Lpw4vJ7dBwVNlsM7VF2CYtTkJVeVukLV52k7FRq7T09n76+ud3f/zPb378
H/9cW+r42tvv/9qeDCNdZS3zvjufvts/eLi1d293/9HutQd7e4/2D5/euP38
+uGz/YOnm9c+WVo/jC9uD00vujq7jeF2kloA42AdXb0Sv5th1TXqlOF44vlv
/vLm+3+9/uG/PQnfyu2d5+++140J0J6ywVRsKXs0ODU7fml+fWs3nd1NrGQm
V1YX1rdT2YPMxq301q3lzEFiaXMikeoYmbaEIyyjUNCk9g6Okk1KvsdM0koG
k6mHL3588eZvr7//hzvuTR3vHX/5JSsCpwTAFzML4cEpkcnS3Nu5sJaZS2XC
sYuO9nBzRyTQ2TM8NjO3nL20enV6KXPx0mp0PmXr7GAaRb6RbmtnD8tpFAfs
JJ1kam3n6P7vHn/+5y/f/tU14V29e2Pt+ADvKRV10OJrKXuwtQaLE9qapq+s
TS6lW4bHjT53o4BVA4fBCSSxxuyN9A3PLPbH53tm5v2xYZnP6ov1a9pCbJdR
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
Pso7cbaq/H8BD6flLQ==
          "], {{0, 32.}, {32., 0}}, {0, 255}, ColorFunction -> RGBColor], 
         BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True], 
         Selectable -> False], DefaultBaseStyle -> "ImageGraphics", 
        ImageSizeRaw -> {32., 32.}, PlotRange -> {{0, 32.}, {0, 32.}}], ",", 
       GraphicsBox[
        TagBox[
         RasterBox[CompressedData["
1:eJwtVmlPY+mVbqVH6ahHmcrUDjRggwGzmdVmMVAYm8UL3vfter/er32v9+vr
fbexsY0xZaCg2Jqq6urq9JKkk3SkfJgsiqYnUb6PNP9kPNJIz3v0vufLOXre
59E5eAMktPzko48+Qn7WDUJ9kAbD+rDoF92HxI3YQLfZxHT7zKAZXjZ83E3i
/v/83x1QC/foy3wWTS3jO20mGHaZTYBWKdTI+IJ9llIh0+nUSplIKxOLeTtT
k7inTx5Mjw8uzo/h8M8fP3nQRU/v46GhXuJYP3G0n0jELSyS6NtbJtBUymPN
tFPEY2xtLLKZNKNek07Hywd5LBrydotopTIRX6VUmIyAEZDbjBpAJd58QRkZ
xc2SxijkqWHCZ897HnXxWf8z/FAfgfDZ5BRheXWetrUmk4ujqPekGjqveJVy
HnNvk8WiW63m43br5vZ1q1VHwz4DoBQJOEa9NISYsZA9k/BjET8E2TmcPQ57
Ryhk02hrU9NEHL53cLAXj+8bI+JXVheZrC2NWhgOOo8q6GUTvTpJI7ALABRC
Edfpsp2fn97fXzePDnw+j1arsoOKetHbacYPKslcFk0lI4Vi1u6w2u0gAjvt
NotUJqYszeHwfaOjuFUqWSjc9Xk0hwXkpBq9aGUvjjKnrUwyidodZplcaHeA
rVajdVQKh+wAINXplI0D9Ns39Q+f12uVMOLR2q2KcMjh8TiCAW8sGvDDLq/H
pVLLqeuU7Z0NjVpcSEF3p/Gbk8TLKnZymD6upOvlWCzmt9nNSpXUDTna7Waj
lg7CRqNO4oNtd5eN99fVm9Nou2z2ObhC7guNbE+nlRuMOh/sTkS9pVykepDK
pCOpVCQRj9yeV+862XYt1q5lazmsGPMdZAL5QhJB3N1u3W5Hs1mtFDHUZ/M6
LVeXzX/++MP9q1Q1rqhGeQFwWyGg8VgbApHQaAKKucDNxcGrk/xVJ9U+8B3m
PeVCuHmQrGaDtSJaL6cOctFaPvyykbl4fZbOYF1CujpJxMPdr/G6uiq1/ekv
v/+f//77+wusHuGHNFS3kopYWELu9jZjOxGF7u861xelZFhzWHbmEwYMlie6
CAKFjO+wlChkw+VSrFQI1SrpN+/uSuWMyaQ0GzVBP+T3uVwuMBhw/Nffvv3x
T59f1n11TFwNyJqYLQYrvJD+oIj9519/8/2vXyfiTubullS0q5AwWLsrUv6G
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
QKGym60Om83rdsQTyf8F9ue57A==
          "], {{0, 32.}, {32., 0}}, {0, 255}, ColorFunction -> RGBColor], 
         BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True], 
         Selectable -> False], DefaultBaseStyle -> "ImageGraphics", 
        ImageSizeRaw -> {32., 32.}, PlotRange -> {{0, 32.}, {0, 32.}}], ",", 
       GraphicsBox[
        TagBox[
         RasterBox[CompressedData["
1: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
/wP7+SLN
          "], {{0, 32.}, {32., 0}}, {0, 255}, ColorFunction -> RGBColor], 
         BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True], 
         Selectable -> False], DefaultBaseStyle -> "ImageGraphics", 
        ImageSizeRaw -> {32., 32.}, PlotRange -> {{0, 32.}, {0, 32.}}], ",", 
       GraphicsBox[
        TagBox[
         RasterBox[CompressedData["
1:eJw1lvlPW9kVx33PtcGsBhKMDcbGhISwJGExBmyDwQmLbcxiAgRwSEJwCAlD
Fpgmk0rNZIiapmpmiVSpldr5pZqqUqv5G/s5zxnp8vT8eO9s3+Xe6P6z4iNx
uVynXi7FB69mX7588M16Ez82Tk6PDk/KB9mTs/Jh+eXEvuVh15c/vX8arz5J
VL/N+37aC/95o+3TVvDDyoXnCW+u3WRaJNXgStabZJ25eUFud8tmj1kJm1y7
LATsdq89m6n/uBX+65O+n89G/3Ey8Ldyz+e98A+7kV/e5f/3471/fZfl5nSq
mmjPJj2vMnXnSy0fVi9+vxk4maxZaDMzPknVuwierOXGZIOyecnc7jZLIVPo
kGLE7PSa/UF7kqg9X279Ycv/eS/09ydXfj4d+e/H9V8/7//6qfSf9/kH1+Vu
v925akt98iTufptt/Fhs3b9hb7XKdKNo8DqTqDWJOpNuknxQVsOy1GGWOmS5
06x2yVrUFKNmb8A+T3pPZ+o/lbr++XL03+/yv3y79NPh6Pl6ZLNHNi/LxmXZ
0fj2PO/7Nuvb7WMgZqrBpHQ4kqojl2FlmmXuoty6YOZaTTags1rr0iy3Lwmf
lPrM81T9H4uBDxuh1/Ntu33e40TzSqdd65LtXtm/IW9u1f1l3f86U18aMLcu
UrbWn6qXqXoNTroprj6WK9NsGGAhpPHJshox61HXxiWze9U+GrF7/XYtYgsd
9v3mpWxAiP/whv1d2guy73JNxxOeUr8wHye4mfaZtI/4Lu2l3oA4oKQbXXMX
zVK7WQ4ZBrXSqTdkKXabrV5ZCdt8u6b4004PqG33yclk1Xm24TzXeDrlPRgW
4q9GhCHMNpvZJjPT9Fv9X5ZrmhZaXIttYC3LYW1hpVOKXZpovVu4X+60+aDN
d9auhOVgRH4/V/d+qelFqvpgSMoj8nhMHg5ZoMkGDdOGqDPNRleT9qLLSQpG
uQ6zEnHih83tqKxx3+leapdi1C60Scxj71wxzxLuPyzUnaVrHg4xKDmKm+MJ
IdEOnUbAUeZbtZd5v7DAhUVG5kYKUFh25k986leBAEoYzriRzHi1hZ+n056X
qSpweRp3n017nict9d8bFFLDveWQ5AKyGDCLQdqRxaCLmlUdTi/z/i/4FkKu
9ahsXZH1KFi7i1EPNUzWaMFP4vJoVJ6OeUh0mgILe/+62blqiA8lGGbWiZ/V
+CbfLuiLhzQFOrC0GIEhPNfJb/SgO5sL2kIIGhPfModDgo/Li6SHQR3FNONu
v9m6TBmoSUlItdCJ4RAfZaEy4pNovtXkgvoabcIlKmdW/HfZwRqN5wI6n8cx
eZaQp3F7FNdeiI+ceZkIlcnM+SXtUzkD6IJfSKdddNAXQeiRmQjxsQ66QOB7
A4LWGAIkeThkIOT+dRXFwbB5EjcPritzqJwgFIObLQbtbDNy+LJIlLmgWXJB
1Q7yX4sI/McAGcv2FTkc0bE8jhmocm+AiQm94F3w59GIQenMkx6pjar4JN9h
yTLbBB8kXsUVabvAF1JV+J/vkIL6gH7I549GmLk5GjPwZMcB8d6gOYwZBrUP
sn2ORsIqSbVKxy35yfCJPOZRR5rwqtCwo5kmejE3L2qufIcSaaPHlgbk4bB5
qtO2kJxxlUfcB8P2wTW8VNtkhg6lZYkuOjW+k0Kw0MkaXMjGPTi2ZFosWbAO
esm0aArEiAzn28x2rzmOy9GYjutuv2xfFQiDy0EwSsWBHUkKEwZH9FhwDJkr
toPLTXhBwc61KuJEhupzrXZWs8tEDWUwAaO0HFNF7DrBocHWZaVNMSrMZ1Uh
c/B1Vj6gcNCUPne2sFxAPyn14wB23u8G9KkGG6+y6UZLeZT9OGa/TldRFQNh
s7vTq4l4zk/8HA8sOFRfdNhIfF3A3enQO8peKXuD8nW65ptM7Xave8EPQDbT
bHG23X6V/1cT7reLDdSGFtadvXW3D+brh3zulG0KYXHsV5xcZjGgKmMmkGrr
sm58x+PeN5n65wlPecgcxezdPt0H798QOI9g3y408L7uQRFNgUzQCF3TIPXg
LfmQxodItAMVeXKzRQmzEtFhLodsNmBvR91fjXteJLEvNhf2KbM/pBR9kXS/
SlchzHxIfUxhbbcrznipkyJnHUrkFFxlKUKGhwgNObMnovFCyDNZZ3nzZKLq
Taa2PGwZi5rwsJRH1RNIqmePFquodWrBfEtMrthvqqFCNopU2uBm8NNxCdXp
/WvK6oU2uzdY/Xq2+jRVdTBkS1cNz9lqSXE8jvPrwSNRYzBDRg18806FGG+q
zkx69fCQquzytcLPCvnn/O5cu5aKPO9ccb9Iec+m3Ni7OnM3TxR3oGHP5QXq
QZXEYdfIOfZbOZkgH44lydrK+cSlRxTnOu0jvl2L2lK/BwjQC5FBttTvXtTd
RzDARX/FKDQLtU1Um3iVdpH2uXTDRS+6Q+n2QZbKLl/ZdrmhO0CHA9CsEEHg
Fm2iAvwHr0jrkYyYOJ7FFjBnPqFr4sc9lfYN3jjnVyi5x2oSTgtTDdoRWRDp
gl+PB6yFgIKFwOHATLNMNRIfFVuEwIjQLxZaORgQedyj57Tf9nEXz/k56WXs
QmuJGtV+0pkYuaZ9ijIocE05pg0uSq1WN6RFp3AJtywPfzly6JBrtELnhGMq
TY1XOataxp3u8MwKIrBotoV9h+1MR8EL+A97IrpG+4DCURD0GQ5cIizlOedM
ZUjc40o6xzbKrgTHkGPWFXO7mCFI8XLloHjzgloNkQmL6hnI3oC5P2hwS45/
SKw8YmApMSd0sXEYgoy6TbxafZ7gPOeGhzG3iXkUI16jL2pmFPAETIvdesIh
Jsau8a9xb+5dYzfhnKMQ/x+Wy+Np
          "], {{0, 32.}, {32., 0}}, {0, 255}, ColorFunction -> RGBColor], 
         BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True], 
         Selectable -> False], DefaultBaseStyle -> "ImageGraphics", 
        ImageSizeRaw -> {32., 32.}, PlotRange -> {{0, 32.}, {0, 32.}}], ",", 
       GraphicsBox[
        TagBox[
         RasterBox[CompressedData["
1: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
CEAYJaEZGob7Jcr/A4Y6ot4=
          "], {{0, 32.}, {32., 0}}, {0, 255}, ColorFunction -> RGBColor], 
         BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True], 
         Selectable -> False], DefaultBaseStyle -> "ImageGraphics", 
        ImageSizeRaw -> {32., 32.}, PlotRange -> {{0, 32.}, {0, 32.}}], ",", 
       GraphicsBox[
        TagBox[
         RasterBox[CompressedData["
1:eJwtlWmQHOV9xiFOOamy43LZOFAmUlAMkiUh7TE7x859z3RP9xzdMz0909Pd
09PT9zX3ucfszK5Wu6sbIawrMhFgBRmhchEuyYUjDgsZBKYM2JjCOcgBVOJU
kW/54lY5H7qr3/fD73nq+T/v2zsqBsL/yV133dX8c/OFMN1Ao8H00W+ai5ze
lASdqwJ6ixO4hqPyFXPzgf9/7nw7fPFAApv1JbyxXBDMP2z1bd819eA+6z6b
zxmCpuzBuflItaOce+nsc+/+w43f3Xj10198+OW/v/fpPwfTyW179+yYmnlw
xj7rjVv8wG6b6yGLdc+cA0YLBMWVKI7ilOn5kMUNeKJ5storC12LO/yXD/zN
1+65/8F9NlPiwX12sEifeu7x5z568drHr7zxr69f/+TVW//920uvXZvyuHZO
z+ydsz9sde+xeqZdob02z85Zx+45p9UVAmJICshZ5/3TzmgQLAIpVtTHgr64
Y/fst7c98J3tD5nwvXOeXTPOYCF//sbTL/zT9Rv/dvPnn75x7ZOfvf75+wce
f2yvdW7v9Oys3W1zhfbbPHssTps35ggkZjxRM4Q5ayDsT+7Ytd8eyqAFlWS6
8SRl84Lfvn/ntp375zxRux+YcYZmPZGsxv/4vedvfPb6Lz5/59Z/3vzZv7x6
/aM3GpOBNxhyOD2Oeb/XD0xbXTN2rzsIB+M5WxByhJM+ACX52s79VlsAzuBi
rX0gDGF/DGTWFfXE0GlHeL/Vbw+AtY3Jyx//49u/v/X2Z2+/8slPX/74haeu
P1mkCgF/yOPyh3yxgB+we0POEOAOp30xbM6XsPgAVxzxwfkdD1vcEdgRAOaD
4KwrbPPF73h2R0Np0u5JPPR9q8UbPX75qdc+vfnu79+8/dlb1z66fvmtJ8aP
9LEMCsYgLI2l4xkQzIbgnBtE/TARSpbtAdjhT/jjaBjK77P77X6TGZyeD5jm
zUxMFVMiAmMeH7Dje3t8UOLqOz+9/b+/fPfLd25/8avbn7//7K2rTK2MIng0
DOIIzhTYLEoFE7gnno+kKnGEc4bSrlAyCOZ8McTiic44w3PuqM0HmJmb/k2+
xRX2hxN+b3jXzt2Mwr/9xXu/+b+PPvjy17f/49dv/e7DkxfPQFkkAWOxGJQG
00WEgBJYCCgGQTIC0RGIcoXSdh8wH4BmnZE75XTFnYGk1QNYPbFZ9x3zeyxu
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
          "], {{0, 32.}, {32., 0}}, {0, 255}, ColorFunction -> RGBColor], 
         BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True], 
         Selectable -> False], DefaultBaseStyle -> "ImageGraphics", 
        ImageSizeRaw -> {32., 32.}, PlotRange -> {{0, 32.}, {0, 32.}}], ",", 
       GraphicsBox[
        TagBox[
         RasterBox[CompressedData["
1:eJwtlndwG+eVwD2XuYxzjs+SVWKZkk1KFAsAVpBoBEACAohC9L6LDiwWZQEs
gMUuFiAKQYBgb2ATqUJZNEVTMmVZxZHkOFJcMh7Hl2Tiu7niuSQeJ47jEsVt
PHE8ySEz9+a9b77v++P3Zt573/degwfVwf/00EMPYQ/XFp07JUgk3Gn9vtrB
GMWC/qgPkkWTPr8vwfJ8p3ZZ///2j71SxNcqxAatvDScuLy5em551qJV8Hq6
fIAxGwsjDutUPjM2nFpbmr5wen53ozo/XgrAkEwms7s8XigQicRIMk2kcB/k
9Hutfo/NbbOoZBKZSGg36SOQ0zAkd5hNLhu4fbr62o3nL65XSSLWz2OJeWyr
XuOyGBCvK4YEhklspjJSTCcGBAKZUi2RSEOBQAiG8+nU+Y3Vrc31gN/u9Vl8
UM2FE4H9RgOo05isJrCvu0vE48rEp+ZHs9cvniEisNcFcrnMHnpHH4dh0Kud
TtvE5OT5MxtEPIonooNKZSeTI5ENxSIxNBg6vTh3+/revdvXKmMFJ+STDOkk
csspKcAS6uhcOYs/1Fh3qPXE0Q5qo9eqs+tk7M5WF2Do57FpnTQ6o3vgVD/o
tK1vXvjhrdsxJAz53HKdmtk/wB0Q+2AU8sDry0t7u9s3rl2emBrXWd18uYkp
A9tFYKvQQhWaOkWm+iMH6o8dPnr0oIDXG3CaXCY1BBrZvfQmGuUEtZXGYCjM
tumVMz/60aul4phSpzOAABKPOzwBmwvxeuDq/OyFc2ee37m4Up2pZWLAYO/R
ezq0UNuQlyZztctcBx8/cOjQwSeOHuFx2Q6z1qqXiYXs5pbmFlpnZx9v0OwB
wyOz65devv/mtZt3SlOL2VxpbnaOJMkwEiewZHFkJJvNLUyUZ4upWCzcb3Ax
DIFerZeuctFV3m6Fb/++/XVHDjc2PNne0dzLoDY1PdFEq+cKeUaLRe9w2KM4
MbG6sXX55R/f/8U7/37z7v3l6sr59ZXZiVEsEo4gCbsnbPMGUxlyrToej/iV
FqfU7JEYbSI7JLTBAwDM7O4QsrutalE8YM9igSKJlArE7NxEoZjVASYA9i+c
f+bcsxeu7O3+8p13rt+9v3p269KV52eri7t7L45PLtrsXpvTgcaDa8sT02O5
dIb0+WF/AA7jpN2PuELRIhGeK+AvnF++8czqKztn7j13frVcq0MCJ2Kg3R6M
xXOV0dRIEkH921f3KqubBl/yhZ+8NX9xd+HiC/Pr59JkvJzD5sez1amR8WK6
kCVtNovJaIiFsRSWyaXzpyt4OQFXi5nt1amtxdG0DwAVEiIWTqcJjxsOBCMx
Ih5JI/HhRKoyka1uVk5v33jtrav3Xl/bub565Up+rrgwV1lfXJqfmFpemJqY
GAuhcZMTdsLxbGmmNDUfNMtdWknIYUqj0DDqxWD7KBldX5lKpRI2q9vjrr0i
JE5i+XIxnM1klpfOXN3de+XW3r0fLm6eI1amPeVkZXVu8+LO2uq56emZ8sQk
USjNbFyAMNLsgiLJlFkm8ttMITdgkAsSkGs4iiyWyfXqKBKCzCbQ4YAdLtgL
h5FIfLhSyi1PjqyWKptTc8+tzW+tlZ9dyW0tTz2zsbm7OzmzgBHDuVIFJTMT
S8tzq2vJBEHEklE3GLCbrToFbDdiAY/Xoo96wRQKuW2gRmkwWZyA02uHwh44
GkmmS4uL6ZlyaqGcWZ4qLM2Wzq5PbT+7e/fO9Zfvzi0t45lcFCcXzpw9u/Pc
0samPxBzOvwRlyXkBMJeJ+r34GHfCBkrZbDSMAnoTaze/kGpxgg6Hd6IDyHc
/kQyM4YVZlKTy8MLG9mZtfHVC2vbz1968eaLd27vXL2an5wmSmOlpaX0zAyU
KXC0Fo7WGrBqIcCgk0q0cknIC+JRXzoR9ThcZrO9t6ef1yfWKPV2wBOKEkR+
HCMrWGoaL1Tz0xvj8+eWTl84v3Xpuasv/PRnP7v92hvIyJgtSeqjcUUwIgvF
uF6E7UFhi9Jj0kn4A9006pBkQDbIVUjEXK5AZbQqlaCgTyro5WkEEghG8NGJ
c5defOn2G9dv3//pz3/17q9/++GHH/zhw99//Okn3/7975du3lEiuCJCyMJJ
LTZsSOT6fQmmG0OsKr1EONA3QKPRaZQOGqWtsYnS0tbVzeQp1NZBGdhD46ja
u7VKnTNK3Hn13/746de//d3HDz778q9/+aYmn3/5VU2//es3997+uS45Io/k
1WhWH88o0ALXi7NcWNAil3MZXDa/q5tNa+1sqqc8Wdd4rIFSf7yNwZEo9B4m
R85q7+vtEVqs8Eu37rz33u/ef/+DTz/66M8f/fHLzx88ePDJV1998fXXX/z3
B39wj1Ul0YKeKBmTOWmsyIVJthdPQaYAoBULTnW0t/e0tVNq/MONj/7rsQOH
GhtbGBIVKDU423mqPo5aJbXUvrjf/P6D/33v/T99/vlnX3zxzd++/fSzB599
/dV7n/zpPz7+c2Jt+1Q0p8uMafAREVrog1MsCEdMUo9OeorHaTxe30Wh0Cld
x5+mPLb/6Ucfe/pYQ0c3W6w0u2Va0Kx3D0pBbHLj/K3Xt+++ef3N/7zx1n/d
evt/rtx/+/Irb279+BelrTtAdl6WLOqy42qiLKzFJ5Rh+1MxYAjSDUoFfW1t
VDaD1d/XPyAU07qY+w8+VVdfy4mwmy0fFBuc7hDoi2h9mCU+nqpeSa1cI9df
wtdeKp69eWbv/pXX30UmdqS+gik7acxOaonJgWiBE8qw/KmkTRM0yQzygY4O
Wlt7t9XqcMM+B+Tl8ITHGqgt7fzjzXwWH9DZg94IipHZeG6mvHJ5bONapno5
vXS1uLw7d3pndH4zXtoont7zlKuG9LgGr/DRPDuUZgQI3KGPAAqXWsChtx1v
aJIrNAgS9ridJgtwsrl934H6/Ydb605yB9VuwBXyBdA4nitU5stzq/npKjY6
g2Qqw5NLMJ6f3LhYvXIDyE+rUuWhZIGLZpkISfcnCZcetarCoELGZzY3nuzo
7DEbjOJ+Pp/Na29jnGhh1p3oPfhUW1Mbjy8yqA1uixuGorEQRmDDeSSZSo5W
RlY2MssbiYU1ID+uTFWUqXFZvMBCyJ4A3gXFcacqZlfFnVpAeYrP6qE0t/CY
TKtGZVGqGxtaT1L7nmpm/6Cecuho64EjlEYqv1ckF2j1ciOgszgUBoPKbtMi
ES2ekSSzIrwoJcryxKgEHemtwX2JDg+a8ihxtzbhNviBIbthSMBhDfb1VdL4
pbOrAl7/E3Uth+po+3/QcLy195HHTxw81tnQyTnRzaGyBro4Ip5MJTCalZGY
OI6zwzgvlpcTRVk8K0ZzXVCizYNSneFCSJ9wKv/BN0tcBolRIVXw+UG7YWdr
MRz0spn9DfWdh480N9H66Nyho82MRw83/cuhxu8faa6jsNoFKqbW1gu42TDS
44sORDJaMj8YxfojRJsrUoM3WwOzpIvw6iGd1GuQwqAa1Ci0gyKHUVkpxgvp
GOLzGlQ6NlvYzRpk8JVHnm773r4T39138pHDlMfr6Y88RT/KUdXLTc02J9UD
c4LxQRTnByPcSJLmCFEdSJPVX80GFvOoRyOyKkRuk0Y9KFRLxWbNEIkGcslw
EvESET+BYUNqUx9fIpWonjzR8f0nWx87Rn34cOM/H2w+xpC1acFGvZYGmvmQ
X4LEeXCEg2AUW7DVHmq0wmmvsZKAUIfKqZUY5aIa36xR+V22COSA7eYaPI+j
w1gsEQ2TydhoNqnSa6l0RktnN7WH0cHksgbEQsWQQC0VaWRawAwGEAkU4gVi
rWCgCfAft/gQgzwMDAXMErOMb5SJrFqlWaMk49FkyA+B5nwynk2gtW6G+Z2F
JDw3lswTsdo4DtttbovJZtQ5AYPPZkQha8Jnj3sdeCxR67z6RJpp99NBH9Xk
NPLpSna7mke3yAS1+Nj1GkCnScVq/CDidkGgRSU+FYVcuahvJOEfG05WMulU
KEQiyFyxWHMUhj2ww4qFAhkUQT1OHIkEQqgHTXKliiHA5opj/wf8Buq4
          "], {{0, 32.}, {32., 0}}, {0, 255}, ColorFunction -> RGBColor], 
         BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True], 
         Selectable -> False], DefaultBaseStyle -> "ImageGraphics", 
        ImageSizeRaw -> {32., 32.}, PlotRange -> {{0, 32.}, {0, 32.}}], ",", 
       GraphicsBox[
        TagBox[
         RasterBox[CompressedData["
1:eJwtU1lUGtgZntO+dJ02mURNFBUX3NhVXBDcQBHcAWMUF3BHdhAQEBBRFFwQ
RGQVFYl7XJOocUnMYjJJM9Okk2nSSTJJppNOJ85kpu1z6Tk957v/uf99uN/y
3wtkcMubf/HRRx8Jf+Uv5XRJtkBA7yT/0d9QOcK2Fk5TYwFH1NTSJEhl/NJ/
GP7/9b/9i+9Ovnr3/Yt3719998PL73549d2Pb77/8Pb9h29Ofnp78uH1+w+v
Tz68ev/T1yc/vfnhP1+f/OfVyb9ffv/h6d/f33/2zc6nzxd3P/Os3HTP7zrm
d+2Lh47lQ/vintW3Ne7dGPdumWeuvHn/89uTf71+//Orf/70t28/PP/2xxf/
+PD6+5/9Jy//8aMffsYX7358/s3J09fvP33+z/vPvn3417fHf3lz+PDFxsGT
hbXj2aXD6cWDqYX9qeUbM+t3L23dW7hye3b1xtTSvmP++pev3j19+e7x828e
PX3z4Is39568fvjF28+f/f2zv759+MXXD558/eDxq3uffXXj+MnOzc8v7z5a
vXZv68rttSt3traPVzdvzy/ue+d2Zuauzy7s+Ravz60czq0eza/d9C3tu71X
za7L9x99eef+4zv3nty+//To0y9v3vvy1qfP7n/+tz89fvnw0fOju385OHp0
cPjgyvad9c3Dxct7S8tbS/OrPt/K3OzylGfR5Vr0uOcn3fMez5zb6XW5vE63
z+7wWW2zVpt3zDa9sbm9ubm9u33j4ODe4Y2Ht27/+fbdx0d3Prt58+HR3vHO
9p2d7cPrO3trq9vLi2sLcyvzviWvx+d2zXhc0zbr1IR1csbpcdk9LofLbXe7
HZNOu9Nhczgd7km3Z9o7s39wZ+/6kR/Xrh2srGyurmxtrW5vrl2d9y77Jjxe
l883szA345udmvVrnppecrt8bofHNeF0WGzWMduExe602u0Wh91qc9scDqvT
YbW7nHaP2+WdmpqZmdrbvbWz69d5tHXVj4O1y5tTTs/0hH1ixDTSN2geHJkw
jTktFtuYRano4/JVcuWg0eyeck/azCbb6KjdNGozm90WP8W4w2LxV6fV6rbZ
J53Oab8Bt3t2dtnlXZ/1rV6aXdrZuLa/te11e8aH9MO9SrNBbx8dcowO2Ub0
AzoFiZhLLivlcTsEPLm2u2/CZBof1NtGDJOmUfe4xTE2Nmkdn3XZ5qcc0/6M
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
MPl8llDA/C+xsIuB
          "], {{0, 32.}, {32., 0}}, {0, 255}, ColorFunction -> RGBColor], 
         BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True], 
         Selectable -> False], DefaultBaseStyle -> "ImageGraphics", 
        ImageSizeRaw -> {32., 32.}, PlotRange -> {{0, 32.}, {0, 32.}}]}], 
     "}"}], "\"high entropy\""},
  "Labeled",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}, {
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, 
    GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
    BaselinePosition -> {1, 1}]& ),
  InterpretationFunction->(RowBox[{"Labeled", "[", 
     RowBox[{#, ",", #2, ",", 
       RowBox[{"{", "}"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.89359573884391*^9},
 CellLabel->"Out[25]=",ExpressionUUID->"b9e8e024-a1c5-4a09-9619-df772b17f830"],

Cell[BoxData[
 TemplateBox[{
   RowBox[{"{", 
     RowBox[{
       GraphicsBox[
        TagBox[
         RasterBox[CompressedData["
1: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
79pDnmuP/+Bxbp+D/7eOZ7a9dmKrw+611PecSDXqCqqdK9XehbbU3Zmywonm
/irN2Wn7kRPZfaM5/RN5fRNF/ZN5Q0PfpIUvObvL+coXr17+ztVnv+vZH9x9
fnS9smeZ/z4nn2+XX9njet3zVd/dzuc/WXZok+N2d/t1jnbLKYudaY7OtFdc
7J1cFrmvcnNwcl6ybLHLK47ng4JT2uSJvPYkEq64Vj1wt7pk/dEv1x3f+dbF
3WtOfbXm4M5NJ3Z8eGH7u+e2bTi2+b2jH71/fMvGwx9s3r3qw0/d1rzp6LHM
7g1HmvtiqqsjzYlkCW25o4OH/ZJVdpQtLkvD6f7x5WWxlay4ClZMcW0NR1rG
5Z70PbPxn2s/37H++50f7Pt048Htbx/+3OPortWnPl99fseq8/9ec3rXmsNb
3L5b77TNbfGHS2hrKRR3GmU5lbLMjuLkSHndkbaJStuyiOLpsfTa4a/Ti7KZ
VSxmeQPjSVVFNS8vvzD8TuBF758DD+4O+u9X9J//E35ge+RPW257vh+yd6P/
l6v9vlzls8vj5NY3T+3c8Mv2d/Z/sv67rRt2bt+wdfNbnl9tOXBgx8cfvP7Z
yqWeby47/tE/Qr1/LKl+HFfRQOo/KCjjC9S85lZWXW1TfaW4uqK1spKVlyPI
TW97xOAyQ0ojLmcHn04K+iXK90BsoFf0Te/79HNhQeeCg88HBHv7XfuFfvO0
f6DXCe+9pw58cfPkvpun9t8NuZL8OC+qrCHxKSu2sFwg0LTwlYKmdmGTpIWr
4Dd2sOvEvOomUXl1a35u3cPkwpTYpLiw2NgQRvztiOhbEYw7QdHBfuEBfqGX
r9N9/ALOXwo460O/cMbveAD9wr0HoZFZaeGFxdFPOYllnNj8KiFfK2jqamnW
Cpt7udzeBk5/XX13Y71CWMUT5ZfUZT7KSU2NYzJi05MY6czo1MT7D1Oux8X8
Fh56PTLYN9j/SuAV39vXvQIvnrh54crdG7eSGPTsgqCCmvsl7NQKfmxOpZDX
J2gc4HOHeJxBfuMAh93XUNvZWCURFD/jJqXWpqTmMBMjY+5HMuOT0rOYmTkx
Dx/RGSkBcQmhKYx7TEZIdMSd5Di/6PCrkWFXI8IC4hLpGWW3C7mRpez4J6zo
zNLG+m5ufU8ja4Bd3yN4pmZXS5+Vi3jlzaInlU1J8ZWMqEfx0fEJUYlpSQ/T
HmVmFaVkPY5MzglPzgxLTQpnJtxLTLjFiL3xIDrwXkRQdHQIMz3s4dOQ32tC
CypiC6tiHhY1lKtrK1T1dZqaahW7qo1VJa4r5dflV7GycivjI4sTojLioxmJ
scyMtJTUDGZqVkJGzv2U7JCE5DupzMiU5LDYB9fv3w2MjroVEUOPjgmKT7yV
khOQkhdaVBJbWBqZkv0/VZprqQ==
          "], {{0, 32.}, {32., 0}}, {0, 255}, ColorFunction -> RGBColor], 
         BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True], 
         Selectable -> False], DefaultBaseStyle -> "ImageGraphics", 
        ImageSizeRaw -> {32., 32.}, PlotRange -> {{0, 32.}, {0, 32.}}], ",", 
       GraphicsBox[
        TagBox[
         RasterBox[CompressedData["
1:eJxNlXk0G9gex9USEQlBbBG7Ei21UxS1pLGOSFCEIva2Yg2traq20qpaao2E
iJCELCIRtIOpsZQqqou2us47r+fNvDf2mnZmXjp97513zuf+zv397ve33PvP
NSRkYJOlpaSkcoASg43P98zOjr+Mg0qcMGJOWgoxKdGPmJuUkpR9kiAjCRr8
Z33d983/Spv9Z8/8vxgL28zFHdbSNvvhFmd5i/toi7eyw1/d5a9uD699Y2dk
fVf4ZF/4ZO//ETzeFTzeG177ikTPXdkZWt5hL22zFiXssBZ/ZT34F2tpa3Bp
m7u8y13e5q9sCVa3hKvbEkRrO6LH26PrOxLET3bHnu79D4n7V2T36+nj3a/K
tR3h2s7w6hbv0Rb34dbQoqTm1sjqNnP6zfDcT6OLHzkz78VrW+L1nfEnuxNP
dr/Ze8/2vt+QsD/54r9s7H+LfOPe8717z/Ynnu5N/KUXr2+LJOOt7AiWt4dX
tu893b1c1VXX1EftG80qqr+3+o+7koLP9yY3JOxPbexPv9z/4dX+/VcHM5uf
7m8efEMS+eHlf5AIpl8cSJSTz78mSua5K2m0vje2tit6vDuzeVhZ05H5nV+m
v3u0f8DY1Or8209z7w5/fH1w/+X+7MuD2Vf7c5sHC69/W3jzZf7twcLbvfk3
B7OvDxc2Py1sHsy9Opj7avd+fLl3/8X+/Q0Jn6afH0w+35+QXOrZwYMPfwgF
0zcDbJu8dK94WhThI7vbuiemVhae/Pzw9cHyu8OHH748+un3Rx8+L334/eH7
L8vvPj9692X57ZeFl7/OPv9lfnPvwbvPs29++/H14dzrT/Ob+3OvJFPt33/x
aWrjcPLFwcrf/uzv5dwMsmMEH2/1Nim2R1x0MDvv40OKTqopquon0wUcsUgw
sby+uf7xt5W/fV77+5eV99sj0/Nk5kD3IJczMbv4/OeVD78v/9V94e3hg7d7
C28OHmz+tvTyYHHzcP3jn+QOeoG3BT3CscYNUWgNLXKA59lqJJipxhprFDgd
IzmY55+yIOcTHy+tv/n74fLmr3T+3aKSggISofxyamlmal/D7bnRu8sziyuP
36++/7z67vfld3/MbfwyNDLG6Gc//fgHgz0W72RGCbUu8zDAIwCk42q3vBBX
XBAXTFWJ+pAUddlSJOiGmxGZmDg7PjW78radzr+Um5WEcYt1M4+10rvsYX07
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
IC1czI6dGIq/x03kdeP+DftUtGA=
          "], {{0, 32.}, {32., 0}}, {0, 255}, ColorFunction -> RGBColor], 
         BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True], 
         Selectable -> False], DefaultBaseStyle -> "ImageGraphics", 
        ImageSizeRaw -> {32., 32.}, PlotRange -> {{0, 32.}, {0, 32.}}], ",", 
       GraphicsBox[
        TagBox[
         RasterBox[CompressedData["
1:eJwtlGdUE1i3hilSQnovhB56h4CE3iK9E4nUEEggEIoQSkKVGhBxAEVKCCS0
IL2jKBZmRnRmdGYUBQHHTxHp4Mw3c//ddfPde9d69l5nnx/Pfn+cdfSYOZFs
JQUFhXx1eYtMLvLKy0vmR8HkAy07n5OWzUoNyOax0lh5Tkxl+aXu/9d/ziff
/jn/66+Xu/tzW19n3u/Pbx0svT+Q95mdw7mdo4UPh4s7+0tbewtbe/e2D2Y+
HEzJ2ZFzOLV9ML69P7b9dez919HNvZHNPdnmF9nGZ9nbT4Prn3rX/9Wz/rH/
9w9jL7Y/nxz2PX+TPLWeNPWeObWVOrXFntpmzWwz5zaZs+uZi+8yF1+zF99w
FjYz5t6zZjeSZzYSZrboU9uxk2/p42+ix96Gjr7zv/vWZ+S1x/CvLgM/U/p+
dux5Ydf93OfWo7ye+7snh/2v9+JXjuNWTpMenSU/OmfKeXiQ/mQ3//GnYtnL
6obpyjsr/P6fro28rZzaLJ39o3B+L3f+gLP4mbHw8crCbvj8ftjkQfjd/SDZ
V7/hr55DX5yGvthJj327NjNvTBweHo69O0///pTzw1HmD8fZcr4/4n+/e23m
BbdGFEPPFabwxIXNd0rapfye7ipJu3CktXm25c5K2dDTvMm1nPnf0xbeMWc/
JE59pk/uho9/9h/9SB3+5Dp4RpXsLPzw/nT/aHbjm+DH/dK1zxVrX6qe79Ws
/sHvmChKLeCHxQsiLhe6OeaYmqfa23PITpne1PzomEImu4Sb35xV0Z7XcFvQ
duuaSHhzjN99r6jvydWBHzNkz5OHfoqQbVHH35yf/314eLS4fV63tlv3Yrfx
570bv+y33d8oY1f3BjFaKN45DnZFJkZjpk59di4dJuRmHdtaLSsBwaSAYJKn
b8Uzc+RZuRY6+hT4RfJozCLm1cKs8oLihuLy9vTGiejRZ+fHX3ePjxY/nl3/
5bDx1Vnzr9/afv+37N4nUUy11Mi3DmfoCdS4ijN6quO7bO5/38LvsVHoY5Ow
ZdOQWWO/u8a+UkMPEcmlVceuiWBajyaVoox4eMscA8ccIy+2FztP8rii9+HO
4cnDT0etv//Z8vrfbet/i1cOOziSQVLcIpk2hLCkaACzMQYP9X2XTanzFr5L
ppeWjANmjajjhi6z2pRZovestseijtuyltuMnuOc3sUZLecxgpsEf7HOMrxS
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
a2fPdx2i79o7W1pvNd9saf4f1WkCWw==
          "], {{0, 32.}, {32., 0}}, {0, 255}, ColorFunction -> RGBColor], 
         BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True], 
         Selectable -> False], DefaultBaseStyle -> "ImageGraphics", 
        ImageSizeRaw -> {32., 32.}, PlotRange -> {{0, 32.}, {0, 32.}}], ",", 
       GraphicsBox[
        TagBox[
         RasterBox[CompressedData["
1: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
PmHhX7PQh1HEh9JgrZBjqSjsMab+EE861ND3TMr9XNFPudIf6ov+eKXp10M9
f1ia/ufTzS8tZzbwoOuOoBkcaBoLvoY+dZOAmSdi25T8viaTtcM80lXRWKYt
0MrTk/jlYtoE2/M7Ge2enJEXJ2qsNNSX6L9Q046iMO+SqPta3vvMiPcKv59l
vruK0B112E6W5EcR5aXb6a9cTr9wRzz0xS3SCUMSViMvsErFG2wrG+msGO2q
Gu8+O34JOKvyRnOaQcXrUXCG5Jx8dfTMUFdLrWlOzd6PRB8KkAcC5Aehy4dI
10Me/oDn/paFex2E+bM/8hsSZJvo0CuP6y1M7anI7Goz1xVqCpQ8W1/tTH/d
bH/D/EDjHMDg+ZmBuv62kjpjcnECrzQ7efX6aO/F2ma14O88zBHL7jAUcciE
7zPsDuiI/UDkT1TUSz+7T72Rtz3hvb5ehqqmtk5LY1V+RVZipZCZKQxamexY
mei4PXFxZbxjebx9abx9cbTl1mjrrLXhYq3+QlXe4vTQ3JT1XJr8O77jv/mo
X8IQH5iI/WDEd+Guj3MVW1mxI95YMxaWhIYkuDknx6pyxDydHzGd6J7MICeK
Q7Zu9G3OX9mav3Jnrndzrnd99tLaTPeqrXNlqmtpon2gs7K/q6GxpsSYIvuU
id/lYd9GOv0Sif033/536dybwxeuT7RZ48PaHSCVdqBiJLQQizI5opKc0VyS
M/BHS5Fx7i9Ztxf6P7k1cO+WFQDotxeuAqbrc70b873Tg43WnqaelupEGTeB
7FpIcKz2wVmD8PdZzl8LCF+q+OtJwmG6Z6UL0uSC1rmiYjywbB9nDp0UH8XI
iudoE3iffTz6cGXkwdLIvcVj/fuLQ4DjvcVBgE9uDW7MX+5tMZuLNMIwCpXs
6k9w9PfC0YjOoSSXSBIuloSTeTiGujtQSM6Bvq6MAM+wEG9pBE2n5hemiXPT
JPqUyOebtifrk5+tjn96+xrAo9tjj4C6CvQjD5YBr8G1ue6Wmpy81KiiVFGx
VmxIF2epuSoZA9DhMr3D6AQByzeK6x8bGaiRheYk8g0ZkuKsGJNOZs6OthjV
L+5MP9u0PduYerox9WRt6vHa5GcfjwP6AA9Xhh8uDz1Ytn6ydHVjvvvmUP38
gGVu0DLSaeqqy64xKAvThDnJgoJUkSE9yqCVlOplFQWKcyXJDeaM9urMvvr0
/lbj53enn9+xvdiaeb45/XTd9mTDBlg8Wh19vDYGHN1xiiXr/eXBuwt9m3OX
1qY71+d6VmydC2OtM9aG4cuVva3G9rrc5rNZbed0PRcKe1vO9HeUDvdUXrtc
NQrQW/P59uyx+B1AfAoI8mRj8vH6cYTHawBj/z8oYCL9d2/2bV3v25jrvW3r
vg1s12TnjbHW+WtN00ONNmu9zVoH1MmB2omrtZP9tRMDteP99aN9lhfbc19s
z3++NQvw/M7M59vzTzdtTzdsT9cnn6xNPFmf+G+KYQBgHMAObC8AQz/ertXp
7hVb99JUx62J1lsTbTfHm2+MNs1fOz873DQz1DRlbZy2XpgcaHy8Pv1sY+bF
1tyzO4D+7LPNmWPxjUlg6A+XRx+tjj9cvnZ/aeh4exeH7y0Obd3o37zRvz57
+batc3WmZ3nq4uJE2+Jk+82xlhujzdeP45yfGjg/MdAwOdgA6P8HQBG4iQ==

          "], {{0, 32.}, {32., 0}}, {0, 255}, ColorFunction -> RGBColor], 
         BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True], 
         Selectable -> False], DefaultBaseStyle -> "ImageGraphics", 
        ImageSizeRaw -> {32., 32.}, PlotRange -> {{0, 32.}, {0, 32.}}], ",", 
       GraphicsBox[
        TagBox[
         RasterBox[CompressedData["
1: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
          "], {{0, 32.}, {32., 0}}, {0, 255}, ColorFunction -> RGBColor], 
         BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True], 
         Selectable -> False], DefaultBaseStyle -> "ImageGraphics", 
        ImageSizeRaw -> {32., 32.}, PlotRange -> {{0, 32.}, {0, 32.}}], ",", 
       GraphicsBox[
        TagBox[
         RasterBox[CompressedData["
1:eJyVlglUVNcZxz1pYolHYQD1KDGKERW1MYEgKApCcUlyVASCeiRpBUXc0Aoo
FSRKcIFalzaSGo4LqNRatbbIEj1IHNYZltlhGAaQUWYEZnmzvDdvH/rNjBBQ
9LTfufPmzdx3f/d/v/t9932zEw5E73xn3LhxqS5wiY5PD09JiT8Sw4EfsftT
dyftT9zxxf60xKTElKUJv4I/vV9+7PeDg4MMw7BDxoxhNMNQjkY72v9hABz8
n81mszf4Hm5OG+odw97S5ViNjbV/25xkuAFFNEOyLMWyJMMQNE05RY4exTpv
hqcYAz705JDZXQQ0iiJIErPi5mfPu1EUwXHMarXiOA4dI53Mjpj0rfqH4KyV
ZlCcMOn0mufPu7S6F91PFShmpGgC4NiQwT1JkjAXTdNv5zM2lmbBFxRLEgyO
EsZ+pP+ZRqWoqyo9d/q4XC4BF9E0CU8AkMAJWAdMY0UxzIJiFgtcrRYU/oSF
AH+UAx3CKZYhGRLT6ww9T1/IZT3NfAWfJ679ufxmwa4tG4WCRvsomqVtLOXw
GYXhFGalUCuJYoQZtZosyICuu0NJEsSYfIZlCNwqbWhQ1NfLa7gy7s+i6urK
+3ee3CtO2x4naOE7+LYhPmHno1ZnIy0YNBQx9ak1Y/CHdojEsMbHjzsb+doO
+UCnQq1UqhXy5kcPDm3/RiRsGs0nX+E7l2DSI9A1zB8dMAyBoTIeTyURGtUq
s/YFMtBvUD8XVJYfP7BLJhXas5K0u5GC/cRH6YcGfMKCGXV68g18xp7HlKqj
XdfbY7XoUDNiMZnN2gEJtzL38B+kEoGdTzm2CQLmNT5pRsmx+YyjsRRDveh/
0cyvl7cKdXo1SdlDA0UMrXXcc1npYlEzpC/wSYa2x6QVp6yv60dH8p2abSzB
UgAy/vTo4Y6dO0NDVqwIDrpedPnG34uOZWc9efyoXdB04cSxNqmYYQcp2p5x
EJwkThBWnBjNx00W4FPkL3zHYYDbSBOvgZu0Z09I+KrPAgIX+PpevVKw5vMI
z8luOdlZbaKWM9lZnQo5zdpI+0FBQ1q/5GOj+I79NdAkNVL/oI3SqDq+O350
ZcTq4PC1Yau/2JaQuH1H4lyf2Z7ukw7s261sk/7tbJ5S3kazgwRNsnCcUsyb
9JsNCMz+y/lss6Fm47VLF9d9+blf4LIlIasiN8XlnP6T14yZSz/zC17iv/33
33TKZVfz/6KUt1KsjaAImiJBITTg4yjmjHy7eKMZQ0ygn6EdfMfJBSnOrapK
/N3Xy5cuDVq+cu2GmBN5Zy/89SLHjbNp/brItWtiNqxrFbfcu1nYr+4lKMZK
WCEHneJh+wlH5jqVA9xiMCJaHegH8RaLBUGQvj6tTCJ9VPbgRtH1M2cvALqB
33jnn7e/XB2RnBB/MGnn+dxTMmFz6d1buj4NhpOoFbVi9kPGceagTv1OvkWP
mHUGXV8/6O7t7VV2KBGdHgPXwemLY/C0HkHaFR11NTUykfDhg5LK0lIRj69S
KKRNjVfyz3UrZFY4yeAcQ1HUAs1+A0vAzagFMULagnL9gPa5SgXxWVxcfCn/
B25llaxFMNDba9APqNQ93c+6JRJJQ129QtbaUF0jEQjVT1USXnPFnX/9OSez
TcTDzUYzYjboEb1ebzAY7Fc9/DCABx5W/CQUCEpLSyvKy+HtsCspaeF839jI
qMy9e+5fKWht5vc87VT3aWCYXqvrUnTwa+tlInFPR2dTdd2ty9dyjx+pflyu
6oJNlvf0qLq6OisrK+/du1dUWHi9sOjEdzkQcPv3JQcGBqampkL25eTkuLu6
fTjNa2NwUPbO+P/cKHqq7BSKxLW1tVKxpE0iFTY2S1uErS0iUUNj8eVrCXFb
zuadPJOXe/BgCoxNT0+PjIwMDQ39zaJFc+f4zJn9kd8nn4aHhfn5+SUmJsK2
5p7OnfnBDJ9Z3pt/G3Y6ec+TkpIf8y+tWx8ZEhJyIHl/7RNuY029rEkg5jVJ
mlpyso7Nne0d4PfJAt/5072mu3t4TJw48T2Hubi4TPGcvDpiVfjKsG+PZtXV
1ZWXl+t0uritWz9esHDh3PkbwiKykg+eO5W3+GO/ia4cDw8Pn4/m3L5Z3FLH
k/Gam2vq+TW1O7YlvPfOuy7jXX7t4jL+fRc3DmfSpEmurq4TJkxwc3XzmjZ9
3569RzMyb9/6B3iGICBcyJjo6FkzPlwWsGRN+Jq0A4fXr4uaxPH0mDIVxnFc
3Q6npFb8u6Tk1p1bV4t+zP8hKnJjgP8Sf/+Ad8ePnzxt6t7kfXFxcVu2bOGA
uXEW+i5IPZgibBF0d3ZBZAEfgr+iogJ8NXXylHlz561YEeozx9fNbfLy5WEh
IeEcN4/Yr2JP5uRk/vFIetqhQ2lpRzOPfv/9xZMnT4H3tsXHl5WXcblc8MPi
xYs9PTxjY2MLr12D+IaghVf88Pu9oKDA3d19woT3YdSSgCCv6TPjtm7bvOnr
+fMWRkfH7N69Kzk5OSsr6/z584WFhXfv3gVgWVkZj8dTKpUajWZgYCAlJcXb
2xsWIhaL7eUBwwwXV2DwTHZ2dlTURiBs2BA144PZ/n5B/n6BQYHBGRkZ+fkX
b9y4XlJSUlVV1dTUJJfbw7K/v99oNEJN4qxG2tvb79+/X11dDW4ZSR6u32Aj
1OpeqVT6Vcxmr+mzli0NDV4WGhGxFnTy+TyZTKZSqbRarclkGllNOVEji0zG
UZC8Yo4noYuG4QUFV8A/PnMWLFr06amTeZCXCGJw6nylFByp0/7KcyzkLeUr
8MH6+7QZR76FKMrMOKZS9TpqTnpM5ut+eDP5ZR0OGiBsNZo+RbsSJoL4hRlH
1uSvl/Gvl/Sj6xD2v0ENlUs=
          "], {{0, 32.}, {32., 0}}, {0, 255}, ColorFunction -> RGBColor], 
         BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True], 
         Selectable -> False], DefaultBaseStyle -> "ImageGraphics", 
        ImageSizeRaw -> {32., 32.}, PlotRange -> {{0, 32.}, {0, 32.}}], ",", 
       GraphicsBox[
        TagBox[
         RasterBox[CompressedData["
1:eJwtlAlQ01cexzvb3doKKF5YwBWVAiIgcqiABAQEwhEgJwlJIEEIBJQrgALh
yJ2QQCCEOwESEu47JBAICQTCEdBaa7ft1Kp0dT0qFpVd27Xq/jvdmc/7zvf3
e2/ee7/fm3nHU3NhpL989NFHlE8BgRGvhRQUEEvg1kCAzKGQM3LS06JyCtMz
0gv8Uj8Gksf+P/7wz/QLP+uNW3rjM4PxqWHh2bzx54XFLaNpe8n0ctn4atXw
cm3uhXlue8Pwy4Zhe93wenl+Z3n+tcnwckn/cnFhewHACPDKuAjwEvDzC9vz
88/ndS8M+geaaXP31LpMc0M2vd4N+Ok1IFRqNxT6m4qFm0r9TeXMhnJqvXdm
o09n7tGalVqzQrsmn1qVaQBdl82YO2fMHdrldg3Ayh+qXmpVLbepF1smllom
ZhsGmwvbWgpaJYUSaUmXtLRLUtLZSZV3lvXKqIOy8v4uao+sXNlF7QO8tETZ
ViyXlivbSrslVGV7mUJyvVtS3N1WKJMUydsArnUDNBV0AJmmXGnDlVZxQWN7
+YicpuqgjnSUj3bRJrqZagVL08PWKlnTSvaUgqXu4Uz1cWYGeDpAFQyNnK3u
FcwC9NXM9nKmlQy1gq6WV6mUrKkerlbGVAMAvo+j7WFplZyhLtZMF2O6hzPX
zZoFjJKr762eH6idH6ybHxYZRxqMgJlsXlWJl0fqjEO1hr5a3ZDI0C/UTbQs
D9cbxhsWVY1LgA7VGfprdRLaWGvFUEtpfydtvJM5JaErlAK9nK0drF0YES0N
1RmBnfsFhgHh/GijcbzZpGpdnWheHqjVDdbOjYsXxxoWJpqXVC2mMWC2aXFE
pB8VG2Y6zQDqVtO4eH64TjdcP6dqnB9vXByoX+6pGRWXD0roY01lA+LrvW0V
w51MVS9/pr92bkCoHxItdDAnJbRxOWNiUDDTX63tq57ur9FNtqzMdtyYk93S
d9+ak9+clpqnJWuzHetTLcs66fqsxKyTrI2IFgZE5sF6rej6YHPFaDt9Qkqf
7GJqFFytkqcdEM4Cd5toWu4T6MbFJm3rxlSbaUysH6439nJmuhnqHvaUkqWR
MTW9/Dmg6v4aQw93ZrjGMMjXjQK1C/VKngbofDtzpAhdn4cS5CB4hSghFd/I
SG8TXJWJipTNJQMdVZpu1sywcHGAvzAintV2mbRdXw4JF5VcrZyl6WSo2ipV
UpqmuXSMf7W7OlsmKuhvpwLFTsmAF2dOtleo6sp66ekd1JQWClJYjKgvQTXw
SDJRXj8/G1jf20BRNRapRJThOkpveRovH0vNxzELicIycnNtWf9Ai0kmMMi4
+k6atqNcLaWqxUVjTdfGxUWjkvLplhJVfcEoJ7+LGEZNDa3IuMRIDarAni++
HEwlR9DJYEYGmF2S1F6c2HQlnpuLZIWdTshMpLCLGhGReeloRhNPLRHqFGJT
BVnKJnfxM2SctK7rSc0F8Pqc+NpCRFNlsrwA1kSGc/g5Pez0Lj65pyarn50m
ZxClgiwFP0fBIHcUYUVX4aw8DCsbVYkIIxakU43qL1t4o511MxPym30ty8rW
5WaOJjn8GjmqohhZmwcT5kLrcqGinDhxfnxLIbw9Fy0crjMpefpO5nQzVVVL
6a8itZURRRlQKjGhiBBfiAZnBLhFRPolxodivV0v5GdQuxsmJ+UrQ22Lw+0r
3W1GZfuSoLQ73D0p+AtUsCMW7EaC+hZgAyuTQUyMf1W8Xy4FXU2ILkaGZeMg
1/KIfPilK77OsQ4HvO2sTx096OHrBjpoaed61NvT2f/kCd99lkcTY9PqmTJu
qbQku55e3llZJqlhKMnYKh8H8Fn7mLN28WdtYf5HMBePEYIciP6OidjQAgal
ZVhpnJ74Sj12q7NtikVrz0yjRoXjzriHenoE2Bywtztw1GqXjZ3Nyf17jx22
cQ7wi3V3DbWz8XVyCvbyio0MJ5DTqpLj81CBaWAPLNiDEOV+OcIlGeyafuk0
gZvTvPXg349+2rr34/PN+9sP//nq8eOdJ0/f/PPRzg8/PjFv3Jk3royOqhsa
OgqLmKUVNfnFrKLSGmpVW0v77OD4jcGxtUntP6b135tXNtcN36mVJmG5gkpq
qCI1oi5chV8kjzVOvnn25N2vW+9+/8/vb9+8f/crYH797d/Ptn5+tfP67fvf
3354/9/3H3bevH2y9Xrz2avv7j1fXrvX07fS2rZQ16QXt+mE4nmmUM8QTjVJ
jBOTX22sPlEN3MrE0DyOhDh/7l1TJLxt0D29f2f7+ebO9sP/bP/0bufh+51H
z3/6dmdr88Pb7Q+/vfjw2/aH/+68e/P6t193Hj/92bzx1YPNF6urd8cHNup5
PfTSbmrZeAVTU8kcr6T1chj93dIlamHLkb1nnGw944Kgy+oJ4+QQGhpNySZ8
bZr8ZnH4rml0c03z8MbM8zsLv3xn+uWHtZ0fb77e/PrZ/a8SUfEODvbNzeLH
/3o4MzTRxmO2CkRcurycJkvNrDoXEAMCQfzPx18rbnK09z92yFUq6ti6/4Oi
UehwaL+z3UFpdfmsTLjY07DU17jUCyBeGWo1j0vNw1LzuHxYUmt3yMru8F7v
My7f3F69vTjf38RuFXDp1Nai6610dkdAYBwEkux/ISG/uCEyLNluv6NCItt6
cJeae+XMFy5nnU+y8nPurRjumw13V3TfLmhuTA8vT/QsjMoMfdJpRSs1l+Ro
b3va2dHd6RjQhWc/Pv7aZB7v1Ypq9WKxeaD3H9WcEUpuU2lpR4dCX0zh2+4/
joiDcKnXo4NAoecuYCHwHCzu+yXjvfXVn25/+eib24++vfPo+2+ePvj2xeYP
T+5+V1FM8XI9lZKI8ffyYleU31n7+tbyDZ16Qyo11dROMSoVXJaczegqud6I
xlIiQzFuTl6RoaCYEND50+7Zqan5JFKwt1dZVgY9L6fiak5Vbh6joIBzrbi6
/Fojm95czUPGxfp5e5UWUjh02vUCilal1qk08tYRGDTj3PkIFydfO7vj+w4c
ttpju2+PyznPcFhsIhwKvhTkd9LRAQIOI1/GebocT8chyVh0BgKVGg/Fx8Qm
Q2LxcZGEuGgcJPqCt2cs+FLelUxSKuHsmTNISCIsHAMJSg0HYU67BR4/6mVh
YWNpaXPE/lRMOD4hHIuB44IggSExoIDgs9lZaQgo5PBBa58z7pGgIFgIGBYS
lRAciQwH42MiU2KjksCRkef9YHHx5IzMBEi8r5ePj+dZDxcf71PBSYisGm5H
DplGwBXg0DloeFY6lkJEZmHgeK8QH2+Ql3+QLzEFh4iPP2i918/Xh4QjXobj
CQlJ2BiUzxenbPfstrfe4+3sHORzNgYc4+nhFRgACgoMtrKwsvhszwkH19Nu
AZ8fcjpq73r8qIfNgRN/tz0VE4LGJZCSECmgMFBYWHBcNDgVi88hZe3fbYWE
QC8npqQj/yANkRwfFmVtudti167gC4GQKMg5n/McFheNwtgetjvp7Op3LjAW
DI+OQJ5y8frkr59+tsti1yefBfqFJCOupEDJaGgKMgGRGAdHRCWccfL4+367
PX+zdDvm6uZw0vnz4442DscO2B/Z//me3ZYWuywOWB/as3uf5adWQQHB7ic9
dn386V4L631WB6wtD+23srWzOfrJx3/7+KO/WOza7e7ied4j7KJPdLBfJCwC
GncxNgYEjvAPu+QXGgWKjAaBY4LBUaAIMCg8OjgyKigCEhIVezE6KhB86Xx4
0Lkgb3cfLzfvP9Xd2cPNyeOU42nXEx5OR086O7i6nnB3PXHayzXAxyXQ280/
CYLFxeNxcTg8FEdApuCgWBw0CZuAwSagUxC4y2gCKSmVjL6cjUnPxmRmJZFJ
eFIGIfNPSCmkNHxaKvZyGp5ESs5Kx10hYjIJ6MwkGAEVh0WA0QlRyKQEHCYe
AIuIRcBj4PAYGCoOhUlA42FJOFgScAQRlZyKTE5LJKYiiAQYgYAipqAIeEQy
Do5PgibhkbgUVDIhMYWQmIqDEdFxeCyUiIHiERAEIgqBiEPyaMD3IeDQ+Cwa
h01ncxhcLoPLo/P4NF51FVdAr66m87gsHo/N57EEHLqAT68R0Guqq/gAfFq1
gM6vYVTz6Vw+ncer5FbTqoEkj8bh0pm8SnYNV/A/A1QAeA==
          "], {{0, 32.}, {32., 0}}, {0, 255}, ColorFunction -> RGBColor], 
         BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True], 
         Selectable -> False], DefaultBaseStyle -> "ImageGraphics", 
        ImageSizeRaw -> {32., 32.}, PlotRange -> {{0, 32.}, {0, 32.}}], ",", 
       GraphicsBox[
        TagBox[
         RasterBox[CompressedData["
1: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

          "], {{0, 32.}, {32., 0}}, {0, 255}, ColorFunction -> RGBColor], 
         BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True], 
         Selectable -> False], DefaultBaseStyle -> "ImageGraphics", 
        ImageSizeRaw -> {32., 32.}, PlotRange -> {{0, 32.}, {0, 32.}}], ",", 
       GraphicsBox[
        TagBox[
         RasterBox[CompressedData["
1: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
          "], {{0, 32.}, {32., 0}}, {0, 255}, ColorFunction -> RGBColor], 
         BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True], 
         Selectable -> False], DefaultBaseStyle -> "ImageGraphics", 
        ImageSizeRaw -> {32., 32.}, PlotRange -> {{0, 32.}, {0, 32.}}], ",", 
       GraphicsBox[
        TagBox[
         RasterBox[CompressedData["
1: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
K3FuYVgzA/0N+P8HXGYqoQ==
          "], {{0, 32.}, {32., 0}}, {0, 255}, ColorFunction -> RGBColor], 
         BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True], 
         Selectable -> False], DefaultBaseStyle -> "ImageGraphics", 
        ImageSizeRaw -> {32., 32.}, PlotRange -> {{0, 32.}, {0, 32.}}]}], 
     "}"}], "\"low entropy\""},
  "Labeled",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}, {
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, 
    GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
    BaselinePosition -> {1, 1}]& ),
  InterpretationFunction->(RowBox[{"Labeled", "[", 
     RowBox[{#, ",", #2, ",", 
       RowBox[{"{", "}"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.8935957389559216`*^9},
 CellLabel->"Out[26]=",ExpressionUUID->"6c585d1e-38d0-4ed0-9e86-a81869df4bc2"]
}, Open  ]]
},
WindowSize->{571.8, 524.4},
WindowMargins->{{Automatic, 14.400000000000091`}, {Automatic, 0}},
FrontEndVersion->"13.2 for Microsoft Windows (64-bit) (November 18, 2022)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"a99e8541-0569-4eb8-8528-7d2dd43a50a3"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 557, 12, 67, "Input",ExpressionUUID->"3cdcb71d-a6c7-4ef4-aab5-867a8020f55f"],
Cell[1140, 36, 552, 12, 84, "Message",ExpressionUUID->"71ac6d2a-ec9f-4d5c-b672-da88573dfe3d"],
Cell[1695, 50, 26448, 457, 91, "Output",ExpressionUUID->"0b74b881-8f72-4762-9404-8d44791c82eb"]
}, Open  ]],
Cell[CellGroupData[{
Cell[28180, 512, 276, 5, 28, "Input",ExpressionUUID->"8745c4ce-9843-4902-83fd-a2b59bb714c3"],
Cell[28459, 519, 408, 7, 52, "Output",ExpressionUUID->"5d126281-8075-4a13-adf7-6392fc85f727"]
}, Open  ]],
Cell[CellGroupData[{
Cell[28904, 531, 1157, 29, 124, "Input",ExpressionUUID->"ec9b52c8-3eea-4e3d-b59c-392bfde8504d"],
Cell[30064, 562, 39263, 789, 67, "Output",ExpressionUUID->"f2d08419-daf1-4a87-941e-2ebf464e1590"]
}, Open  ]],
Cell[CellGroupData[{
Cell[69364, 1356, 326, 6, 28, "Input",ExpressionUUID->"2b3cab09-31dc-4dd0-a25d-ebf7ecd61cdd"],
Cell[69693, 1364, 37856, 754, 67, "Output",ExpressionUUID->"d5c971aa-27d1-4843-8b71-cdae05197db2"]
}, Open  ]],
Cell[CellGroupData[{
Cell[107586, 2123, 19429, 338, 47, "Input",ExpressionUUID->"d2fb8bfb-a271-489c-bc90-45a5853819ba"],
Cell[127018, 2463, 296, 5, 32, "Output",ExpressionUUID->"a1920446-dcaa-460f-99e4-416f2b5c5531"]
}, Open  ]],
Cell[CellGroupData[{
Cell[127351, 2473, 4381, 78, 47, "Input",ExpressionUUID->"76faf2f1-862b-4514-a450-5ce8f9cb18c6"],
Cell[131735, 2553, 386, 8, 32, "Output",ExpressionUUID->"36d06a08-f635-499a-8e07-ac182e900370"]
}, Open  ]],
Cell[132136, 2564, 333, 8, 28, "Input",ExpressionUUID->"ec753439-92e7-4cd3-90e4-6e4c31a3980b"],
Cell[132472, 2574, 299, 6, 28, "Input",ExpressionUUID->"2ca425ee-a755-4f46-bcbc-089484928921"],
Cell[132774, 2582, 303, 6, 28, "Input",ExpressionUUID->"f323ad42-f9d2-48dd-a7d1-5c2aa54e1bf8"],
Cell[CellGroupData[{
Cell[133102, 2592, 631, 17, 48, "Input",ExpressionUUID->"b650b898-5548-4e91-8457-3a88da9dc18d"],
Cell[133736, 2611, 43509, 734, 68, "Output",ExpressionUUID->"b9e8e024-a1c5-4a09-9619-df772b17f830"],
Cell[177248, 3347, 43296, 731, 68, "Output",ExpressionUUID->"6c585d1e-38d0-4ed0-9e86-a81869df4bc2"]
}, Open  ]]
}
]
*)

